{
"dhatFileVersion": 2,
"mode": "rust-heap",
"verb": "Allocated",
"bklt": true,
"bkacc": false,
"tu": "Âµs",
"Mtu": "s",
"tuth": 10,
"cmd": "/home/isaac/Work/Nethermind/Projects/STARKPack/starkpack-winterfell/target/debug/winterfell do-work",
"pid": 42344,
"tg": 146150299,
"te": 151599236,
"pps": [
{
"tb": 24480,
"tbk": 8,
"tl": 26447,
"mb": 12288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
7
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 8479,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
16,
17,
18
]
},
{
"tb": 24,
"tbk": 2,
"tl": 3,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
29
]
},
{
"tb": 12288,
"tbk": 1,
"tl": 30421914,
"mb": 12288,
"mbk": 1,
"gb": 12288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
30,
31,
32,
33,
34,
18,
35,
36
]
},
{
"tb": 6653,
"tbk": 1,
"tl": 199034,
"mb": 6653,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
37,
38,
39
]
},
{
"tb": 110592,
"tbk": 1,
"tl": 187786,
"mb": 110592,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
40,
41,
42,
43,
44,
45,
46,
47,
48
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 351435,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
49,
50,
51,
52,
53,
54,
55,
56,
57
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 27491,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
60,
61,
62,
63,
64,
65,
66,
67
]
},
{
"tb": 16777216,
"tbk": 512,
"tl": 1908863730,
"mb": 16777216,
"mbk": 512,
"gb": 32768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
73,
74
]
},
{
"tb": 56,
"tbk": 1,
"tl": 149404,
"mb": 56,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
76,
77,
78,
79,
80
]
},
{
"tb": 672,
"tbk": 1,
"tl": 150247,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
81,
82,
83,
84,
85,
86,
87,
88
]
},
{
"tb": 8160,
"tbk": 8,
"tl": 3719512,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
89,
90,
91,
92,
18
]
},
{
"tb": 480,
"tbk": 4,
"tl": 24272,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
89,
90,
91,
93,
94
]
},
{
"tb": 48,
"tbk": 1,
"tl": 24304,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
98,
99,
100,
79
]
},
{
"tb": 24480,
"tbk": 8,
"tl": 9039,
"mb": 12288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
101,
102
]
},
{
"tb": 49152,
"tbk": 512,
"tl": 21930,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
103,
104,
105,
106,
107,
18
]
},
{
"tb": 448,
"tbk": 1,
"tl": 29,
"mb": 448,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
109,
110,
111
]
},
{
"tb": 24576,
"tbk": 1024,
"tl": 49224981,
"mb": 48,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
112,
113,
114,
115,
116,
117,
118,
119,
120,
121
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 4318236,
"mb": 32768,
"mbk": 1,
"gb": 32768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
122,
123,
124,
125,
126,
127,
128,
129
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 120620880,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
130,
131,
132,
133,
134,
135,
136,
137,
138
]
},
{
"tb": 64,
"tbk": 1,
"tl": 290054,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
139,
140,
141,
142,
143
]
},
{
"tb": 1864,
"tbk": 12,
"tl": 58,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
144,
145,
146,
147,
148,
149,
150,
151,
152
]
},
{
"tb": 16384,
"tbk": 512,
"tl": 24715606,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
153,
154,
155,
156,
157,
158,
159,
160,
161,
162
]
},
{
"tb": 16777216,
"tbk": 1048576,
"tl": 2254760,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
122,
123,
124,
163,
164,
165
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 34999,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
166,
167,
168
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 151086108,
"mb": 32768,
"mbk": 1,
"gb": 32768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
169,
170,
171
]
},
{
"tb": 24576,
"tbk": 1,
"tl": 151138935,
"mb": 24576,
"mbk": 1,
"gb": 24576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
172,
173,
174,
175,
176,
177,
178,
18
]
},
{
"tb": 16384,
"tbk": 512,
"tl": 94180811,
"mb": 16384,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
179,
180,
181,
182,
183,
184
]
},
{
"tb": 1600,
"tbk": 8,
"tl": 271,
"mb": 200,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
186,
187,
188,
189,
190,
191
]
},
{
"tb": 1744,
"tbk": 15,
"tl": 69,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
144,
145,
146,
147,
148,
149,
150,
192,
193
]
},
{
"tb": 1760,
"tbk": 2,
"tl": 339777,
"mb": 1760,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
194,
195,
196,
197,
198,
199,
200,
201
]
},
{
"tb": 229376,
"tbk": 512,
"tl": 4580490,
"mb": 229376,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
202,
102,
100,
79
]
},
{
"tb": 896,
"tbk": 1,
"tl": 2189,
"mb": 896,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
194,
195,
196,
197,
198,
203,
151,
152
]
},
{
"tb": 224,
"tbk": 1,
"tl": 21,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
204,
205,
206,
207,
208,
209,
210,
211,
212,
18
]
},
{
"tb": 32,
"tbk": 1,
"tl": 179728,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
194,
213,
214,
215,
216,
217,
218,
78
]
},
{
"tb": 672,
"tbk": 1,
"tl": 2194,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
81,
82,
83,
84,
219,
151,
152,
18
]
},
{
"tb": 7040,
"tbk": 2,
"tl": 618,
"mb": 3584,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
109,
220,
221
]
},
{
"tb": 16777216,
"tbk": 512,
"tl": 12550998,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
222,
223,
224
]
},
{
"tb": 24480,
"tbk": 8,
"tl": 295171,
"mb": 12288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
225,
226,
227,
228,
229
]
},
{
"tb": 24,
"tbk": 2,
"tl": 1,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
27,
230,
29
]
},
{
"tb": 557056,
"tbk": 1024,
"tl": 19666,
"mb": 544,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
231,
232,
233,
234,
235,
236,
237
]
},
{
"tb": 49152,
"tbk": 512,
"tl": 11007,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
238,
239,
240,
241,
242,
243,
244,
245,
246
]
},
{
"tb": 8192,
"tbk": 512,
"tl": 417649,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
247,
248,
249,
250,
251,
252,
18
]
},
{
"tb": 98304,
"tbk": 3,
"tl": 12954962,
"mb": 98304,
"mbk": 3,
"gb": 98304,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
122,
123,
124,
125,
126,
127,
128,
253
]
},
{
"tb": 960,
"tbk": 8,
"tl": 310,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
89,
90,
91,
254,
192
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 27510,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
255,
256,
257,
258,
259,
260,
261,
262
]
},
{
"tb": 12288,
"tbk": 1,
"tl": 30421945,
"mb": 12288,
"mbk": 1,
"gb": 12288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
263,
264,
265,
266,
267,
18,
35,
36
]
},
{
"tb": 832,
"tbk": 8,
"tl": 409,
"mb": 104,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
268,
269,
270,
271,
272,
273,
274
]
},
{
"tb": 49152,
"tbk": 512,
"tl": 8826,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
103,
275,
252,
18,
35,
36
]
},
{
"tb": 3864,
"tbk": 7,
"tl": 3213,
"mb": 1104,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
276,
277,
278,
279,
280,
281
]
},
{
"tb": 8192,
"tbk": 512,
"tl": 77386370185,
"mb": 8192,
"mbk": 512,
"gb": 8192,
"gbk": 512,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
282,
283,
284
]
},
{
"tb": 48960,
"tbk": 8,
"tl": 195868,
"mb": 24576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
285,
286,
287,
288,
289,
290
]
},
{
"tb": 147456,
"tbk": 2,
"tl": 98209,
"mb": 147456,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
291,
292,
293
]
},
{
"tb": 24,
"tbk": 1,
"tl": 199036,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
294,
295,
39,
290
]
},
{
"tb": 131072,
"tbk": 1,
"tl": 21406,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
296,
297,
298
]
},
{
"tb": 7040,
"tbk": 55,
"tl": 103,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
299,
300,
200,
201
]
},
{
"tb": 448,
"tbk": 1,
"tl": 22410,
"mb": 448,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
301,
302,
303,
304,
305,
306,
307,
308
]
},
{
"tb": 224,
"tbk": 1,
"tl": 1934,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
204,
205,
206,
207,
208,
209,
210,
309,
310,
311
]
},
{
"tb": 960,
"tbk": 8,
"tl": 5078,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
285,
312,
313,
314,
315,
316
]
},
{
"tb": 163840,
"tbk": 1024,
"tl": 49217075,
"mb": 320,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
317,
318,
319,
320,
121
]
},
{
"tb": 7040,
"tbk": 55,
"tl": 95,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
321,
322,
323,
324,
325,
326,
327,
328
]
},
{
"tb": 16832,
"tbk": 540,
"tl": 4042575,
"mb": 16384,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
122,
123,
124,
125,
126,
127,
128,
329
]
},
{
"tb": 32768,
"tbk": 512,
"tl": 149560101,
"mb": 32768,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
139,
140,
141,
330,
143
]
},
{
"tb": 32,
"tbk": 1,
"tl": 147979,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
331,
78,
79
]
},
{
"tb": 16384,
"tbk": 1024,
"tl": 24816173,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
332,
333,
334,
335,
336,
337,
338,
339
]
},
{
"tb": 448,
"tbk": 1,
"tl": 56,
"mb": 448,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
340,
111,
100,
79
]
},
{
"tb": 130560,
"tbk": 8,
"tl": 15342672,
"mb": 65536,
"mbk": 1,
"gb": 65536,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
341,
342,
343,
344,
18
]
},
{
"tb": 8192,
"tbk": 512,
"tl": 982,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
345,
346,
275,
252,
18,
35
]
},
{
"tb": 196608,
"tbk": 1024,
"tl": 60213,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
347,
348,
349,
350,
351,
352,
353,
354,
355
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 859394,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
194,
213,
214,
215,
356,
357,
358,
359
]
},
{
"tb": 16384,
"tbk": 512,
"tl": 7124930062,
"mb": 16384,
"mbk": 512,
"gb": 16384,
"gbk": 512,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
89,
90,
91,
360,
361
]
},
{
"tb": 12288,
"tbk": 512,
"tl": 15361788846,
"mb": 12288,
"mbk": 512,
"gb": 12288,
"gbk": 512,
"eb": 0,
"ebk": 0,
"fs": [
8,
30,
362,
363,
364,
126,
127,
128,
365,
366,
367
]
},
{
"tb": 780259,
"tbk": 14,
"tl": 203788,
"mb": 488780,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
285,
368,
369,
370,
371,
372
]
},
{
"tb": 24,
"tbk": 2,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
27,
28,
373
]
},
{
"tb": 16384,
"tbk": 512,
"tl": 8547,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
299,
374,
375,
78
]
},
{
"tb": 1920,
"tbk": 8,
"tl": 2322,
"mb": 512,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
139,
140,
141,
376,
377
]
},
{
"tb": 24,
"tbk": 1,
"tl": 4318246,
"mb": 24,
"mbk": 1,
"gb": 24,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
30,
362,
363,
364,
126,
127,
128,
129,
378,
18
]
},
{
"tb": 1824,
"tbk": 4,
"tl": 2179,
"mb": 456,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
379,
380,
381,
382,
383,
384,
385
]
},
{
"tb": 7040,
"tbk": 2,
"tl": 1630,
"mb": 3584,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
73,
386
]
},
{
"tb": 24576,
"tbk": 1024,
"tl": 90952,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
387,
388,
389,
390,
391,
392
]
},
{
"tb": 672,
"tbk": 1,
"tl": 14496,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
81,
82,
83,
84,
219,
393,
229,
394
]
},
{
"tb": 16896,
"tbk": 512,
"tl": 11739,
"mb": 33,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
395,
396,
397,
398,
399,
400,
401,
402,
403,
404
]
},
{
"tb": 56320,
"tbk": 2,
"tl": 1645,
"mb": 28672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
73,
405
]
},
{
"tb": 12288,
"tbk": 1,
"tl": 430440,
"mb": 12288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
406,
407,
408,
409,
410,
411,
412,
413,
414
]
},
{
"tb": 33570816,
"tbk": 1536,
"tl": 1270459,
"mb": 32768,
"mbk": 1,
"gb": 32768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
415,
416,
417
]
},
{
"tb": 36864,
"tbk": 2,
"tl": 98056,
"mb": 36864,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
194,
213,
214,
215,
356,
418,
419,
293
]
},
{
"tb": 36864,
"tbk": 2,
"tl": 97546,
"mb": 36864,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
194,
213,
214,
215,
356,
420,
421,
422
]
},
{
"tb": 24576,
"tbk": 1024,
"tl": 14249878007,
"mb": 24576,
"mbk": 1024,
"gb": 24576,
"gbk": 1024,
"eb": 0,
"ebk": 0,
"fs": [
8,
112,
113,
114,
115,
116,
117,
118,
119,
423,
424
]
},
{
"tb": 16896,
"tbk": 512,
"tl": 100139562,
"mb": 16896,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
37,
425,
426
]
},
{
"tb": 8388608,
"tbk": 512,
"tl": 253808,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
73,
427
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 856554,
"mb": 262144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
194,
213,
214,
215,
356,
420,
421,
428
]
},
{
"tb": 24576,
"tbk": 512,
"tl": 187012945,
"mb": 24576,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
429,
430,
431,
432,
433,
434
]
},
{
"tb": 24480,
"tbk": 8,
"tl": 292256,
"mb": 12288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
6,
143
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 27615,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
435,
436,
437,
438,
439,
440,
441,
442
]
},
{
"tb": 16384,
"tbk": 512,
"tl": 8296,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
395,
396,
397,
398,
399,
400,
401,
443,
403,
404
]
},
{
"tb": 24480,
"tbk": 8,
"tl": 151152,
"mb": 12288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
444,
445,
446,
447,
100
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 130,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
448,
449,
450,
451,
452,
453,
454,
455
]
},
{
"tb": 1536,
"tbk": 8,
"tl": 4621,
"mb": 192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
456,
457,
458,
459,
460,
461,
462
]
},
{
"tb": 12288,
"tbk": 1,
"tl": 3852,
"mb": 12288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
30,
362,
363,
364,
126,
127,
128,
329,
463,
178
]
},
{
"tb": 16384,
"tbk": 512,
"tl": 379,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
464,
465,
79,
80
]
},
{
"tb": 40960,
"tbk": 1,
"tl": 151390998,
"mb": 40960,
"mbk": 1,
"gb": 40960,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
466,
467,
468,
469,
470,
471,
472,
473,
474
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 12863,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
475,
476,
477,
478,
479,
480,
481,
482,
483
]
},
{
"tb": 144,
"tbk": 1,
"tl": 4318293,
"mb": 144,
"mbk": 1,
"gb": 144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
238,
484,
485,
486,
487,
488,
489,
490,
378,
18
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 25346,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
122,
123,
124,
491,
492,
493
]
},
{
"tb": 2304,
"tbk": 8,
"tl": 4477,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
494,
495,
496,
497,
498,
499
]
},
{
"tb": 6624,
"tbk": 28,
"tl": 4194361,
"mb": 6624,
"mbk": 28,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
194,
213,
214,
215,
216,
500,
501,
502
]
},
{
"tb": 1024,
"tbk": 1,
"tl": 139,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
169,
503,
504
]
},
{
"tb": 344064,
"tbk": 512,
"tl": 149489773,
"mb": 344064,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
30,
505,
506,
507,
508,
509,
510,
511,
512
]
},
{
"tb": 1440,
"tbk": 4,
"tl": 1636,
"mb": 768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
513,
152
]
},
{
"tb": 24,
"tbk": 2,
"tl": 0,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
27,
230,
373
]
},
{
"tb": 12288,
"tbk": 1,
"tl": 21041,
"mb": 12288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
30,
514,
515,
516,
517,
518,
519,
520,
521
]
},
{
"tb": 32768,
"tbk": 512,
"tl": 13479580,
"mb": 32768,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
139,
140,
141,
330,
7
]
},
{
"tb": 1712,
"tbk": 8,
"tl": 1509,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
204,
522,
523,
524,
525,
526,
527,
528,
529
]
},
{
"tb": 64,
"tbk": 1,
"tl": 8,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
530,
531,
532,
533,
534,
535,
536,
537,
538
]
},
{
"tb": 896,
"tbk": 28,
"tl": 46181,
"mb": 896,
"mbk": 28,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
539,
152,
18
]
},
{
"tb": 18432,
"tbk": 2,
"tl": 5051,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
222,
540,
541
]
},
{
"tb": 5397,
"tbk": 2,
"tl": 384137,
"mb": 5397,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
37,
542,
543
]
},
{
"tb": 12288,
"tbk": 1,
"tl": 120631015,
"mb": 12288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
544,
545,
546,
547,
548,
549,
550,
551,
552
]
},
{
"tb": 131072,
"tbk": 8192,
"tl": 202656,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
553,
554,
555
]
},
{
"tb": 12288,
"tbk": 512,
"tl": 24720928,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
556,
557,
161,
162,
107,
18
]
},
{
"tb": 16384,
"tbk": 512,
"tl": 71202365,
"mb": 16384,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
122,
123,
124,
558,
559,
560
]
},
{
"tb": 448,
"tbk": 1,
"tl": 1922,
"mb": 448,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
561,
310,
311
]
},
{
"tb": 7040,
"tbk": 2,
"tl": 342149,
"mb": 7040,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
562,
200,
201,
78
]
},
{
"tb": 8388608,
"tbk": 512,
"tl": 917860,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
169,
503,
563
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 72780,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
564,
565,
566,
567,
568
]
},
{
"tb": 16777216,
"tbk": 512,
"tl": 5850068,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
569,
570,
571,
572,
573,
574,
575,
576
]
},
{
"tb": 448,
"tbk": 1,
"tl": 1424,
"mb": 448,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
577,
578,
579,
580,
581,
582,
583,
584
]
},
{
"tb": 229376,
"tbk": 1,
"tl": 78925,
"mb": 229376,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
585,
586,
587,
588,
589,
590,
591,
229,
394
]
},
{
"tb": 8192,
"tbk": 512,
"tl": 102856426,
"mb": 8192,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
37,
592,
593
]
},
{
"tb": 6653,
"tbk": 1,
"tl": 199022,
"mb": 6653,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
37,
594,
595
]
},
{
"tb": 8192,
"tbk": 512,
"tl": 65780703,
"mb": 8192,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
247,
248,
249,
250,
596,
597,
598
]
},
{
"tb": 1048576,
"tbk": 1,
"tl": 102568799,
"mb": 1048576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
122,
123,
124,
599,
600,
601
]
},
{
"tb": 228928,
"tbk": 14308,
"tl": 125801,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
122,
123,
124,
491,
602,
603
]
},
{
"tb": 41952,
"tbk": 92,
"tl": 30273,
"mb": 14592,
"mbk": 32,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
379,
380,
381,
604,
605,
606
]
},
{
"tb": 896,
"tbk": 1,
"tl": 168845,
"mb": 896,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
299,
607,
608,
87
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 151086175,
"mb": 8192,
"mbk": 1,
"gb": 8192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
169,
609,
610
]
},
{
"tb": 16384,
"tbk": 1024,
"tl": 12348485,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
73,
611
]
},
{
"tb": 448,
"tbk": 1,
"tl": 567,
"mb": 448,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
122,
123,
124,
612,
102,
100
]
},
{
"tb": 16384,
"tbk": 512,
"tl": 5142127,
"mb": 16384,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
299,
613,
375,
78
]
},
{
"tb": 480,
"tbk": 4,
"tl": 356760,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
89,
90,
91,
93,
614
]
},
{
"tb": 256,
"tbk": 1,
"tl": 172200,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
299,
615,
616,
78
]
},
{
"tb": 40960,
"tbk": 512,
"tl": 24497469,
"mb": 80,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
617,
618,
619,
620,
621,
622,
623,
624,
625
]
},
{
"tb": 13004,
"tbk": 17,
"tl": 837725,
"mb": 6528,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
564,
565,
566,
567,
626
]
},
{
"tb": 896,
"tbk": 1,
"tl": 64738,
"mb": 896,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
585,
586,
587,
588,
589,
627,
628,
152,
18
]
},
{
"tb": 40800,
"tbk": 8,
"tl": 162704,
"mb": 20480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
629,
630,
631,
632,
78
]
},
{
"tb": 20480,
"tbk": 1,
"tl": 120209630,
"mb": 20480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
633,
634,
635,
636,
637,
638,
639,
640,
641
]
},
{
"tb": 16384,
"tbk": 512,
"tl": 9722574,
"mb": 16384,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
464,
642,
643,
644,
645,
646
]
},
{
"tb": 4194304,
"tbk": 512,
"tl": 402309,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
169,
503,
647
]
},
{
"tb": 8160,
"tbk": 8,
"tl": 3719509,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
89,
90,
91,
648,
18
]
},
{
"tb": 5344,
"tbk": 50,
"tl": 8474656,
"mb": 5344,
"mbk": 50,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
194,
213,
214,
215,
216,
500,
649,
200
]
},
{
"tb": 7040,
"tbk": 2,
"tl": 2289,
"mb": 3584,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
650,
651,
652,
653,
654,
655,
656,
657,
658
]
},
{
"tb": 1864,
"tbk": 12,
"tl": 60,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
144,
145,
146,
147,
148,
149,
150,
393,
229
]
},
{
"tb": 32640,
"tbk": 8,
"tl": 171701,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
659,
660,
661,
662,
502
]
},
{
"tb": 60496,
"tbk": 1632,
"tl": 409401219,
"mb": 25120,
"mbk": 517,
"gb": 32,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
19,
285,
368,
663,
664,
665,
666,
667,
668
]
},
{
"tb": 32768,
"tbk": 512,
"tl": 74853903,
"mb": 32768,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
139,
140,
141,
669,
670
]
},
{
"tb": 6624,
"tbk": 28,
"tl": 4203676,
"mb": 6624,
"mbk": 28,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
194,
213,
214,
215,
216,
500,
86,
87
]
},
{
"tb": 448,
"tbk": 1,
"tl": 33,
"mb": 448,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
671,
111,
100,
79
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 120209454,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
130,
672,
673,
674,
675,
676,
677,
678,
679
]
},
{
"tb": 288,
"tbk": 1,
"tl": 400723,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
680,
681,
682,
683,
293
]
},
{
"tb": 33456192,
"tbk": 5110,
"tl": 679872,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
139,
140,
141,
684,
18
]
},
{
"tb": 2288,
"tbk": 22,
"tl": 591,
"mb": 312,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
268,
269,
270,
685,
686,
687
]
},
{
"tb": 24480,
"tbk": 8,
"tl": 10170,
"mb": 12288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
688,
78
]
},
{
"tb": 12288,
"tbk": 512,
"tl": 77438255368,
"mb": 12288,
"mbk": 512,
"gb": 12288,
"gbk": 512,
"eb": 0,
"ebk": 0,
"fs": [
8,
30,
689,
690,
691,
692,
693,
694,
695,
696
]
},
{
"tb": 8192,
"tbk": 512,
"tl": 259903,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
247,
248,
249,
250,
697,
698,
699
]
},
{
"tb": 896,
"tbk": 1,
"tl": 14490,
"mb": 896,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
194,
195,
196,
197,
198,
203,
393,
229
]
},
{
"tb": 17382,
"tbk": 10,
"tl": 63720,
"mb": 8704,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
564,
565,
566,
567,
700
]
},
{
"tb": 1920,
"tbk": 16,
"tl": 1921,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
89,
90,
91,
701,
702
]
},
{
"tb": 36224,
"tbk": 185,
"tl": 487893,
"mb": 8192,
"mbk": 28,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
194,
703,
704,
705,
706,
707,
708,
709,
710
]
},
{
"tb": 8192,
"tbk": 512,
"tl": 90169,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
345,
346,
104,
105,
106,
107
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
711,
712,
373,
79,
80
]
},
{
"tb": 229376,
"tbk": 512,
"tl": 87842346,
"mb": 229376,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
299,
607,
713,
502
]
},
{
"tb": 12288,
"tbk": 512,
"tl": 61655235222,
"mb": 12288,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
30,
714,
715,
716,
717,
718,
719,
720,
721
]
},
{
"tb": 65536,
"tbk": 1,
"tl": 8437,
"mb": 65536,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
169,
503,
722
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 27462,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
723,
724,
725,
726,
727,
728,
729,
730
]
},
{
"tb": 24576,
"tbk": 1,
"tl": 132479,
"mb": 24576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
731,
732,
733,
734,
735,
736,
737,
738,
739
]
},
{
"tb": 97920,
"tbk": 8,
"tl": 201014,
"mb": 49152,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
285,
740,
741,
742,
743,
290
]
},
{
"tb": 36864,
"tbk": 1,
"tl": 30464284,
"mb": 36864,
"mbk": 1,
"gb": 36864,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
744,
745,
746,
747,
748,
749,
750,
751,
752
]
},
{
"tb": 72,
"tbk": 1,
"tl": 416677,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
753,
394,
18,
35,
36
]
},
{
"tb": 8192,
"tbk": 512,
"tl": 51673,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
345,
754,
104,
755,
756,
100
]
},
{
"tb": 16416,
"tbk": 1025,
"tl": 374244584,
"mb": 16416,
"mbk": 1025,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
757,
758,
759,
760,
761,
762,
763,
764
]
},
{
"tb": 130944,
"tbk": 20,
"tl": 188315,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
139,
140,
141,
765,
766
]
},
{
"tb": 8388608,
"tbk": 512,
"tl": 15361784656,
"mb": 8388608,
"mbk": 512,
"gb": 8388608,
"gbk": 512,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
122,
123,
124,
125,
126,
127,
128,
365
]
},
{
"tb": 24480,
"tbk": 8,
"tl": 76409,
"mb": 12288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
767,
768,
769,
770,
591
]
},
{
"tb": 49152,
"tbk": 1,
"tl": 151147260,
"mb": 49152,
"mbk": 1,
"gb": 49152,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
771,
772,
773,
774,
775,
776,
777,
778,
779
]
},
{
"tb": 960,
"tbk": 8,
"tl": 2306,
"mb": 512,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
285,
312,
313,
314,
315,
780
]
},
{
"tb": 96,
"tbk": 1,
"tl": 178941,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
194,
213,
214,
215,
216,
781,
218,
78
]
},
{
"tb": 8192,
"tbk": 512,
"tl": 71051,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
782,
161,
783
]
},
{
"tb": 672,
"tbk": 1,
"tl": 240614,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
30,
362,
363,
364,
126,
127,
128,
329,
784,
229
]
},
{
"tb": 72,
"tbk": 1,
"tl": 4318347,
"mb": 72,
"mbk": 1,
"gb": 72,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
30,
362,
363,
364,
126,
127,
128,
253,
378,
18
]
},
{
"tb": 16384,
"tbk": 1024,
"tl": 12341403,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
73,
785
]
},
{
"tb": 24576,
"tbk": 1024,
"tl": 59308,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
786,
388,
389,
390,
391,
392
]
},
{
"tb": 122880,
"tbk": 1024,
"tl": 7124936246,
"mb": 98304,
"mbk": 512,
"gb": 98304,
"gbk": 512,
"eb": 0,
"ebk": 0,
"fs": [
75,
787,
788,
18,
35,
36
]
},
{
"tb": 64,
"tbk": 1,
"tl": 3,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
711,
712,
29,
178,
18,
35
]
},
{
"tb": 24576,
"tbk": 512,
"tl": 135986,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
789,
493,
18,
35,
36
]
},
{
"tb": 8160,
"tbk": 8,
"tl": 6742,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
89,
90,
91,
790,
591
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 151086526,
"mb": 8192,
"mbk": 1,
"gb": 8192,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
791,
792,
793,
794,
795,
796,
797,
798,
799
]
},
{
"tb": 128,
"tbk": 2,
"tl": 4919,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
169,
503,
800
]
},
{
"tb": 229376,
"tbk": 14336,
"tl": 4184074395,
"mb": 229376,
"mbk": 14336,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
801,
802,
803
]
},
{
"tb": 49152,
"tbk": 512,
"tl": 13095,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
103,
104,
755,
756,
100,
79
]
},
{
"tb": 8388608,
"tbk": 512,
"tl": 5923906,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
169,
503,
804
]
},
{
"tb": 448,
"tbk": 1,
"tl": 17,
"mb": 448,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
805,
806,
807,
808,
809,
810,
811,
812
]
},
{
"tb": 1007616,
"tbk": 1024,
"tl": 47547,
"mb": 984,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
813,
814,
815,
816,
817,
818,
390
]
},
{
"tb": 196608,
"tbk": 512,
"tl": 24624784,
"mb": 384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
819,
820,
821,
822,
823,
824,
825,
826,
827
]
},
{
"tb": 17213292544,
"tbk": 4186112,
"tl": 106708373,
"mb": 16368,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
828,
829,
830,
831,
832,
833,
554,
555
]
},
{
"tb": 1744,
"tbk": 15,
"tl": 428,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
144,
145,
146,
147,
148,
149,
834,
702,
835
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 150242,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
194,
836,
837,
838,
839,
840,
841,
842,
843
]
},
{
"tb": 8,
"tbk": 1,
"tl": 4318215,
"mb": 8,
"mbk": 1,
"gb": 8,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
144,
145,
146,
147,
148,
149,
844,
378,
18
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 5905,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
845,
846,
847,
848,
849,
850,
851,
852
]
},
{
"tb": 4416,
"tbk": 8,
"tl": 2292,
"mb": 1656,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
276,
277,
278,
853,
854,
855
]
},
{
"tb": 32768,
"tbk": 512,
"tl": 139318,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
139,
140,
141,
669,
856
]
},
{
"tb": 8192,
"tbk": 512,
"tl": 24709673,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
782,
161,
162
]
},
{
"tb": 72,
"tbk": 1,
"tl": 199077,
"mb": 72,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
857,
858,
859,
860,
861,
862,
290
]
},
{
"tb": 16384,
"tbk": 512,
"tl": 100136223,
"mb": 16384,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
37,
863,
426
]
},
{
"tb": 1920,
"tbk": 4,
"tl": 149952,
"mb": 1024,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
194,
864,
865,
866,
867,
868,
869,
870,
871
]
},
{
"tb": 288,
"tbk": 2,
"tl": 1614,
"mb": 144,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
247,
248,
249,
250,
872,
221,
310
]
},
{
"tb": 4096,
"tbk": 512,
"tl": 5938032,
"mb": 8,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
873,
874,
875,
876,
877,
788,
18
]
},
{
"tb": 40800,
"tbk": 8,
"tl": 139329,
"mb": 20480,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
878,
879,
880,
881,
882,
883,
884,
885,
886
]
},
{
"tb": 128,
"tbk": 1,
"tl": 3587,
"mb": 128,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
887,
888,
889,
890,
891,
892,
893,
894
]
},
{
"tb": 16384,
"tbk": 512,
"tl": 83251689,
"mb": 16384,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
122,
123,
124,
491,
895,
78
]
},
{
"tb": 229376,
"tbk": 512,
"tl": 39050806,
"mb": 229376,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
585,
586,
587,
588,
589,
896,
591,
229,
394
]
},
{
"tb": 8192,
"tbk": 512,
"tl": 7124950448,
"mb": 8192,
"mbk": 512,
"gb": 8192,
"gbk": 512,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
122,
123,
124,
897,
898,
788
]
},
{
"tb": 896,
"tbk": 1,
"tl": 199030,
"mb": 896,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
37,
899,
595
]
},
{
"tb": 16384,
"tbk": 512,
"tl": 75325,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
153,
154,
155,
156,
157,
158,
159,
160,
161,
783
]
},
{
"tb": 12288,
"tbk": 1,
"tl": 30421903,
"mb": 12288,
"mbk": 1,
"gb": 12288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
544,
900,
901,
902,
903,
18,
35,
36
]
},
{
"tb": 33570816,
"tbk": 1536,
"tl": 1356633,
"mb": 32768,
"mbk": 1,
"gb": 32768,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
109,
904,
416
]
},
{
"tb": 30208,
"tbk": 1536,
"tl": 411263484,
"mb": 17408,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
285,
368,
369,
370,
371,
905
]
},
{
"tb": 229376,
"tbk": 1,
"tl": 199068,
"mb": 229376,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
37,
906,
39
]
},
{
"tb": 17146314752,
"tbk": 4186112,
"tl": 38643960,
"mb": 8176,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
122,
123,
124,
491,
907,
554
]
},
{
"tb": 8192,
"tbk": 512,
"tl": 92857,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
345,
754,
104,
105,
106,
107
]
},
{
"tb": 7040,
"tbk": 2,
"tl": 1358,
"mb": 3584,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
650,
908,
909,
910,
911,
193,
212,
18
]
},
{
"tb": 48960,
"tbk": 8,
"tl": 146426,
"mb": 24576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
912,
913,
914,
915,
100
]
},
{
"tb": 7040,
"tbk": 2,
"tl": 539,
"mb": 3584,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
73,
916
]
},
{
"tb": 65536,
"tbk": 1024,
"tl": 49021118,
"mb": 128,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
917,
918,
919,
920,
921
]
},
{
"tb": 1760,
"tbk": 2,
"tl": 1995,
"mb": 896,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
194,
195,
196,
197,
198,
203,
192,
193
]
},
{
"tb": 16,
"tbk": 1,
"tl": 2,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
282,
922,
78
]
},
{
"tb": 480,
"tbk": 4,
"tl": 238,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
89,
90,
91,
254,
151
]
},
{
"tb": 96,
"tbk": 1,
"tl": 192093,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
857,
923,
924,
925,
926,
927,
928,
929,
290
]
},
{
"tb": 110592,
"tbk": 1,
"tl": 151104059,
"mb": 110592,
"mbk": 1,
"gb": 110592,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
40,
930,
931,
932,
933,
934,
935,
936,
937
]
},
{
"tb": 256,
"tbk": 1,
"tl": 527,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
122,
123,
124,
938,
212,
18
]
},
{
"tb": 480,
"tbk": 4,
"tl": 247,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
89,
90,
91,
254,
393
]
},
{
"tb": 160,
"tbk": 1,
"tl": 199074,
"mb": 160,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
37,
939,
940
]
},
{
"tb": 16384,
"tbk": 512,
"tl": 115162,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
941,
493,
18,
35,
36
]
},
{
"tb": 7040,
"tbk": 2,
"tl": 384151,
"mb": 7040,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
37,
942,
543
]
},
{
"tb": 229376,
"tbk": 512,
"tl": 4720771,
"mb": 229376,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
943,
102,
100,
79
]
},
{
"tb": 67108864,
"tbk": 2048,
"tl": 28494451593,
"mb": 67108864,
"mbk": 2048,
"gb": 67076096,
"gbk": 2047,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
944,
945,
946
]
},
{
"tb": 32768,
"tbk": 512,
"tl": 5509,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
139,
140,
141,
947,
948
]
},
{
"tb": 8192,
"tbk": 512,
"tl": 94516,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
122,
123,
124,
949,
950,
951
]
},
{
"tb": 32768,
"tbk": 1,
"tl": 1342043,
"mb": 32768,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
122,
123,
124,
491,
952,
18
]
},
{
"tb": 1864,
"tbk": 12,
"tl": 532,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
144,
145,
146,
147,
148,
149,
834,
702,
953
]
},
{
"tb": 24480,
"tbk": 8,
"tl": 9300,
"mb": 12288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
954,
102
]
},
{
"tb": 24576,
"tbk": 1,
"tl": 124508,
"mb": 24576,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
955,
956,
957,
958,
959,
960,
961,
962,
963
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 9357,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
964,
965,
966,
967,
968,
969,
970,
971,
18,
35
]
},
{
"tb": 96,
"tbk": 1,
"tl": 420771,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
857,
923,
924,
925,
926,
972,
212,
18,
35
]
},
{
"tb": 96,
"tbk": 1,
"tl": 172728,
"mb": 96,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
973,
201
]
},
{
"tb": 16,
"tbk": 1,
"tl": 4318264,
"mb": 16,
"mbk": 1,
"gb": 16,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
122,
123,
124,
897,
974,
487,
488,
489
]
},
{
"tb": 24576,
"tbk": 1,
"tl": 30008833,
"mb": 24576,
"mbk": 1,
"gb": 24576,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
975,
976,
977,
978,
979,
980,
981,
982,
983
]
},
{
"tb": 24480,
"tbk": 8,
"tl": 3719852,
"mb": 12288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
984,
18
]
},
{
"tb": 16384,
"tbk": 1,
"tl": 10727,
"mb": 16384,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
475,
985,
986,
987,
988,
989,
990,
991,
992
]
},
{
"tb": 440,
"tbk": 2,
"tl": 3425,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
204,
205,
206,
207,
208,
209,
210,
993,
994,
310
]
},
{
"tb": 4088,
"tbk": 1,
"tl": 16497,
"mb": 4088,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
995,
996,
997,
998,
999,
1000,
1001,
1002,
1003
]
},
{
"tb": 8388608,
"tbk": 512,
"tl": 76381962,
"mb": 8388608,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
73,
1004
]
},
{
"tb": 12288,
"tbk": 1,
"tl": 30421935,
"mb": 12288,
"mbk": 1,
"gb": 12288,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
1005,
1006,
1007,
1008,
1009,
18,
35,
36
]
},
{
"tb": 8192,
"tbk": 512,
"tl": 11909599,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
247,
248,
249,
250,
1010,
1011,
1012
]
},
{
"tb": 49152,
"tbk": 1024,
"tl": 14248894720,
"mb": 49152,
"mbk": 1024,
"gb": 49152,
"gbk": 1024,
"eb": 0,
"ebk": 0,
"fs": [
8,
30,
1013,
1014,
1015,
1016,
1017,
1018,
1019,
1020
]
},
{
"tb": 224,
"tbk": 1,
"tl": 172736,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1021,
1022,
1023,
1024,
201
]
},
{
"tb": 18432,
"tbk": 2,
"tl": 5880,
"mb": 18432,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
1025,
1026,
293
]
},
{
"tb": 672,
"tbk": 1,
"tl": 149916,
"mb": 672,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
81,
82,
83,
84,
85,
501,
502,
77
]
},
{
"tb": 4088,
"tbk": 1,
"tl": 510,
"mb": 4088,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
995,
996,
997,
998,
999,
1000,
1001,
1002,
1027
]
},
{
"tb": 16384,
"tbk": 512,
"tl": 77363302962,
"mb": 16384,
"mbk": 512,
"gb": 16384,
"gbk": 512,
"eb": 0,
"ebk": 0,
"fs": [
75,
179,
1028,
1029,
1030,
1031,
1032
]
},
{
"tb": 229376,
"tbk": 1,
"tl": 155585,
"mb": 229376,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
299,
607,
1033,
502
]
},
{
"tb": 48,
"tbk": 1,
"tl": 472351,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
30,
1034,
1035,
1036,
1037,
1038,
1039,
1040,
1041
]
},
{
"tb": 12288,
"tbk": 512,
"tl": 7124953806,
"mb": 12288,
"mbk": 512,
"gb": 12288,
"gbk": 512,
"eb": 0,
"ebk": 0,
"fs": [
8,
112,
113,
114,
115,
116,
117,
118,
119,
898,
788
]
},
{
"tb": 58834496,
"tbk": 14308,
"tl": 3684979,
"mb": 237552,
"mbk": 29,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
828,
829,
830,
831,
832,
1042,
603,
1043
]
},
{
"tb": 4096,
"tbk": 1,
"tl": 27531,
"mb": 4096,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
1044,
1045,
1046,
1047,
1048,
1049,
1050,
1051
]
},
{
"tb": 12288,
"tbk": 512,
"tl": 79401,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
556,
557,
161,
783,
756,
100
]
},
{
"tb": 224,
"tbk": 1,
"tl": 745,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
873,
874,
875,
1052,
702,
953,
1053
]
},
{
"tb": 537919488,
"tbk": 513,
"tl": 72630300514,
"mb": 537919488,
"mbk": 513,
"gb": 536870912,
"gbk": 512,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
73,
1054
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 30467456,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
194,
213,
214,
215,
356,
420,
421,
1055
]
},
{
"tb": 32768,
"tbk": 2,
"tl": 944543,
"mb": 32768,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
1056,
1057,
1058
]
},
{
"tb": 8192,
"tbk": 512,
"tl": 65784082,
"mb": 8192,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
247,
248,
249,
250,
1059,
597,
598
]
},
{
"tb": 1224,
"tbk": 2,
"tl": 339287,
"mb": 1224,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
81,
82,
83,
84,
85,
649,
200,
201
]
},
{
"tb": 64,
"tbk": 1,
"tl": 24316,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
139,
140,
141,
142,
7
]
},
{
"tb": 8192,
"tbk": 1,
"tl": 723519,
"mb": 8192,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
964,
1060,
1061,
1062,
1063,
1064,
1065,
1066,
1067
]
},
{
"tb": 16384,
"tbk": 512,
"tl": 90925,
"mb": 32,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
122,
123,
124,
1068,
950,
951
]
},
{
"tb": 32768,
"tbk": 512,
"tl": 133635,
"mb": 64,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
139,
140,
141,
1069,
856
]
},
{
"tb": 224,
"tbk": 1,
"tl": 712,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
873,
874,
875,
1052,
702,
1070,
1071
]
},
{
"tb": 448,
"tbk": 1,
"tl": 3604,
"mb": 448,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
1072,
1073,
100,
79
]
},
{
"tb": 262144,
"tbk": 1,
"tl": 133032674,
"mb": 262144,
"mbk": 1,
"gb": 262144,
"gbk": 1,
"eb": 0,
"ebk": 0,
"fs": [
8,
194,
213,
214,
215,
356,
1074,
555,
1075
]
},
{
"tb": 256,
"tbk": 1,
"tl": 192055,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
19,
20,
21,
22,
23,
24,
25,
26,
37,
1076,
929
]
},
{
"tb": 294912,
"tbk": 1024,
"tl": 39205,
"mb": 288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1077,
1078,
1079,
1080,
1081,
1082,
1083,
1084,
1085
]
},
{
"tb": 8388608,
"tbk": 512,
"tl": 77438246711,
"mb": 8388608,
"mbk": 512,
"gb": 8388608,
"gbk": 512,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
1086,
1087,
1088
]
},
{
"tb": 36864,
"tbk": 1536,
"tl": 56718,
"mb": 72,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1089,
1090,
1091,
1092,
1093,
1094,
1095,
1096,
1097
]
},
{
"tb": 12312,
"tbk": 513,
"tl": 17263650,
"mb": 24,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1098,
1099,
1100,
1101,
1102,
1103,
1104,
1105,
1106
]
},
{
"tb": 448,
"tbk": 1,
"tl": 34,
"mb": 448,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
109,
1107,
102
]
},
{
"tb": 589824,
"tbk": 2048,
"tl": 122035,
"mb": 576,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1108,
1109,
1110,
1111,
1112
]
},
{
"tb": 1864,
"tbk": 12,
"tl": 525,
"mb": 224,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
144,
145,
146,
147,
148,
149,
834,
702,
1070
]
},
{
"tb": 8192,
"tbk": 512,
"tl": 48768,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
345,
346,
104,
755,
756,
100
]
},
{
"tb": 24480,
"tbk": 8,
"tl": 149129,
"mb": 12288,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
3,
4,
5,
1113,
493
]
},
{
"tb": 24576,
"tbk": 512,
"tl": 11913964,
"mb": 48,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
247,
248,
249,
250,
1114,
1011,
1012
]
},
{
"tb": 66977792,
"tbk": 8192,
"tl": 102357607,
"mb": 8176,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
1115,
1116,
1117,
1118,
1119,
1120,
1121,
1122,
1123
]
},
{
"tb": 1224,
"tbk": 2,
"tl": 2002,
"mb": 648,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
81,
82,
83,
84,
219,
192,
193,
212
]
},
{
"tb": 32768,
"tbk": 512,
"tl": 74849708,
"mb": 32768,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
139,
140,
141,
1069,
670
]
},
{
"tb": 8388608,
"tbk": 512,
"tl": 61655228436,
"mb": 8388608,
"mbk": 512,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
122,
123,
124,
1124,
1125,
1126
]
},
{
"tb": 880,
"tbk": 2,
"tl": 1689,
"mb": 880,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
1127,
1128,
1129,
1130,
1131,
1132,
1133,
1134
]
},
{
"tb": 67108864,
"tbk": 512,
"tl": 17623440,
"mb": 131072,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
95,
96,
97,
108,
166,
167,
1135
]
},
{
"tb": 72,
"tbk": 3,
"tl": 12954791,
"mb": 72,
"mbk": 3,
"gb": 72,
"gbk": 3,
"eb": 0,
"ebk": 0,
"fs": [
8,
112,
113,
114,
115,
116,
117,
118,
119,
974,
487,
488,
489
]
},
{
"tb": 66977792,
"tbk": 4186112,
"tl": 71989588,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
1136,
554,
555
]
},
{
"tb": 384,
"tbk": 3,
"tl": 1951,
"mb": 256,
"mbk": 2,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
1,
2,
1137,
1138,
1139,
1140,
192
]
},
{
"tb": 408,
"tbk": 2,
"tl": 739,
"mb": 216,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
58,
59,
873,
874,
875,
1052,
702,
835,
1141
]
},
{
"tb": 256,
"tbk": 1,
"tl": 399799,
"mb": 256,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
8,
9,
10,
11,
12,
13,
14,
15,
1142,
1143,
1144
]
},
{
"tb": 4608,
"tbk": 24,
"tl": 13191,
"mb": 576,
"mbk": 3,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
185,
456,
457,
458,
1145,
1146,
1147
]
},
{
"tb": 8192,
"tbk": 512,
"tl": 4258,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
75,
345,
754,
275,
252,
18,
35
]
},
{
"tb": 8192,
"tbk": 512,
"tl": 66059,
"mb": 16,
"mbk": 1,
"gb": 0,
"gbk": 0,
"eb": 0,
"ebk": 0,
"fs": [
68,
69,
70,
71,
72,
73,
1148
]
}
],
"ftbl": [
"[root]",
"0x55c03d740839: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:245:9)",
"0x55c03d73b58a: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:475:9)",
"0x55c03d3da6ac: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d3e6c99: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d300112: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d413e2b: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:536:13)",
"0x55c03d523f1b: winter_verifier::perform_verification (verifier/src/lib.rs:263:61)",
"0x55c03d3514e9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:245:9)",
"0x55c03d39f7a2: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d2299cc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d2299cc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d2299cc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55c03d22a07b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55c03d22a07b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55c03d22a07b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x55c03d4038ea: winter_math::fft::infer_degree (src/fft/mod.rs:580:20)",
"0x55c03d573a23: winter_prover::Prover::generate_proof (prover/src/lib.rs:548:13)",
"0x55c03d598ff4: winter_prover::Prover::prove (prover/src/lib.rs:171:37)",
"0x55c03d634869: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:245:9)",
"0x55c03d632590: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d633c6c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d633c6c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d633c6c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55c03d6315db: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55c03d6315db: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55c03d6315db: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x55c03d59f654: winter_air::proof::context::bytes_to_element (src/proof/context.rs:210:19)",
"0x55c03d59f336: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:115:21)",
"0x55c03d553454: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:75:13)",
"0x55c03d39d9a2: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d2a6a88: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d2a6a88: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d2a6a88: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d571aa0: winter_prover::Prover::generate_proof (prover/src/lib.rs:300:37)",
"0x55c03d338784: <examples::do_work::DoWorkExample<H> as examples::Example>::prove (src/do_work/mod.rs:108:9)",
"0x55c03cf9d18c: winterfell::main (examples/src/main.rs:47:17)",
"0x55c03d63396c: <winter_utils::serde::byte_reader::SliceReader as winter_utils::serde::byte_reader::ByteReader>::read_vec (src/serde/byte_reader.rs:151:22)",
"0x55c03d5cc129: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:352:21)",
"0x55c03d5ca423: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:174:32)",
"0x55c03d39fda2: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d2960e7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d2960e7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d2960e7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d2960e7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d30ab74: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:167:20)",
"0x55c03d328829: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d46338e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d531c34: winter_verifier::verify (verifier/src/lib.rs:101:24)",
"0x55c03d3a5170: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d25bee1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d25bee1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d25bee1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d25bee1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d330feb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d324426: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d46257b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d44215e: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:89:35)",
"0x55c03d6bf389: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:245:9)",
"0x55c03d70f450: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d28fc51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d28fc51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d28fc51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d28fc51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32ed8b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d325746: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d464cfb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d13ff71: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:78:40)",
"0x55c03d6305cc: <alloc::alloc::Global as core::alloc::Allocator>::allocate_zeroed (alloc/src/alloc.rs:250:9)",
"0x55c03d6307e2: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:185:38)",
"0x55c03d6311b8: alloc::raw_vec::RawVec<T,A>::with_capacity_zeroed_in (alloc/src/raw_vec.rs:138:9)",
"0x55c03d6311b8: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:25:31)",
"0x55c03d62f9c4: alloc::vec::from_elem (src/vec/mod.rs:2535:5)",
"0x55c03d62cf63: <winter_math::field::f128::BaseElement as winter_math::field::traits::FieldElement>::zeroed_vector (field/f128/mod.rs:143:22)",
"0x55c03d4fd657: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:168:33)",
"0x55c03d350f67: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:334:18)",
"0x55c03d128efb: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:342:32)",
"0x55c03d14033c: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:95:29)",
"0x55c03d531db7: winter_verifier::verify (verifier/src/lib.rs:108:19)",
"0x55c03d338d51: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:118:9)",
"0x55c03cf9de6d: winterfell::main (examples/src/main.rs:81:11)",
"0x55c03d3a2782: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d2a6bc8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d2a6bc8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d2a6bc8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d221081: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:483:25)",
"0x55c03d256561: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:134:28)",
"0x55c03d150abb: winter_verifier::channel::ConstraintQueries<E,H>::new (verifier/src/channel.rs:422:43)",
"0x55c03d1405ca: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:96:34)",
"0x55c03d71431a: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d7161a9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d676d32: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d575370: winter_prover::Prover::generate_proof (prover/src/lib.rs:439:13)",
"0x55c03d4bfc74: <winter_crypto::random::default::DefaultRandomCoin<H> as winter_crypto::random::RandomCoin>::draw_integers (src/random/default.rs:275:13)",
"0x55c03d524495: winter_verifier::perform_verification (verifier/src/lib.rs:295:27)",
"0x55c03d2a64e8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d2a64e8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d2a64e8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d388223: winter_fri::verifier::FriVerifier<E,C,H,R>::new (src/verifier/mod.rs:116:32)",
"0x55c03d524118: winter_verifier::perform_verification (verifier/src/lib.rs:272:24)",
"0x55c03d531e7c: winter_verifier::verify (verifier/src/lib.rs:110:21)",
"0x55c03d4a88d4: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:141:13)",
"0x55c03d5249dd: winter_verifier::perform_verification (verifier/src/lib.rs:308:25)",
"0x55c03d1bb82f: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:60:9)",
"0x55c03d410a35: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:364:13)",
"0x55c03d390df0: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:40:22)",
"0x55c03d33da27: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:58:13)",
"0x55c03d575755: winter_prover::Prover::generate_proof (prover/src/lib.rs:403:21)",
"0x55c03d1c0eab: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x55c03d59a312: winter_math::utils::batch_inversion (src/utils/mod.rs:181:39)",
"0x55c03d4ac5e1: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:196:22)",
"0x55c03d524a8c: winter_verifier::perform_verification (verifier/src/lib.rs:314:25)",
"0x55c03d3a00a2: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d229b0c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d229b0c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d229b0c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55c03d313065: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55c03d313065: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55c03d313065: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2628:9)",
"0x55c03d446a46: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:27:5)",
"0x55c03d393352: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:169:36)",
"0x55c03d3912a0: winter_prover::constraints::boundary::BoundaryConstraints<E>::new::{{closure}} (src/constraints/boundary.rs:54:17)",
"0x55c03d312165: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55c03d312165: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55c03d312165: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2628:9)",
"0x55c03d2a5e9a: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55c03d311b65: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55c03d311b65: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55c03d311b65: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2628:9)",
"0x55c03d4f7b59: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:31:5)",
"0x55c03d3a7540: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d259281: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d259281: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d259281: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d259281: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32d77b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d3223b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d463f5b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d5716b0: winter_prover::Prover::generate_proof (prover/src/lib.rs:266:43)",
"0x55c03d3bdd7c: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d3e7059: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d2fe7aa: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d413c7d: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:540:13)",
"0x55c03d54e526: winter_prover::channel::ProverChannel<A,E,H,R>::get_deep_composition_coeffs (prover/src/channel.rs:162:9)",
"0x55c03d6a5ffc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d6a5ffc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d6a5ffc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55c03d6782a5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55c03d6782a5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55c03d6782a5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2628:9)",
"0x55c03d3fa170: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:260:27)",
"0x55c03d5c3225: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:56:28)",
"0x55c03d574703: winter_prover::Prover::generate_proof (prover/src/lib.rs:598:34)",
"0x55c03d3aa502: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d1b2cd6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d1b2cd6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d1b2cd6: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55c03d311965: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55c03d311965: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55c03d311965: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2628:9)",
"0x55c03d59edb8: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:59:39)",
"0x55c03d410e52: winter_air::air::Air::get_transition_constraints (src/air/mod.rs:348:9)",
"0x55c03d33d97b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::new (src/constraints/evaluator.rs:50:13)",
"0x55c03d59e2a7: winter_air::air::transition::TransitionConstraints<E>::main_constraint_coef (air/transition/mod.rs:94:9)",
"0x55c03d33c8b3: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_main_transition (src/constraints/evaluator.rs:272:18)",
"0x55c03d33af77: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:166:30)",
"0x55c03d544e3b: winter_prover::matrix::row_matrix::get_evaluation_offsets (src/matrix/row_matrix.rs:257:32)",
"0x55c03d544126: winter_prover::matrix::row_matrix::RowMatrix<E>::evaluate_polys_over (src/matrix/row_matrix.rs:91:13)",
"0x55c03d598744: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:691:36)",
"0x55c03d59a883: winter_math::utils::get_power_series (src/utils/mod.rs:40:31)",
"0x55c03d38f430: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:43:25)",
"0x55c03d5712fa: winter_prover::Prover::generate_proof (prover/src/lib.rs:257:22)",
"0x55c03d3a2182: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d21ee4e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d21ee4e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d21ee4e: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x55c03d310d67: alloc::vec::from_elem (src/vec/mod.rs:2535:5)",
"0x55c03d5536a3: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:85:25)",
"0x55c03d571096: winter_prover::Prover::generate_proof (prover/src/lib.rs:228:27)",
"0x55c03d1bb592: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::new (src/do_work/air.rs:35:23)",
"0x55c03d5328f1: winter_verifier::verify::{{closure}} (verifier/src/lib.rs:101:85)",
"0x55c03d47f312: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x55c03d22de0a: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold::enumerate::{{closure}} (iter/adapters/enumerate.rs:107:27)",
"0x55c03d117425: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2481:21)",
"0x55c03d22c104: <core::iter::adapters::enumerate::Enumerate<I> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/enumerate.rs:113:9)",
"0x55c03d5e7de9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:245:9)",
"0x55c03d5e585d: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:483:19)",
"0x55c03d5e56bd: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55c03d5e0bcb: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x55c03d5db3c1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x55c03d5dba47: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x55c03d5eae2b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x55c03d5a4034: winter_fri::prover::query_layer (src/prover/mod.rs:291:17)",
"0x55c03d5b6978: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:261:26)",
"0x55c03d39bea2: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d493d78: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d493d78: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d493d78: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x55c03d310d37: alloc::vec::from_elem (src/vec/mod.rs:2535:5)",
"0x55c03d510cc0: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:305:34)",
"0x55c03d514a7a: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:146:28)",
"0x55c03d140994: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:103:53)",
"0x55c03d4a7c35: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:74:34)",
"0x55c03d3f9ddc: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:235:26)",
"0x55c03d5ea1d0: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d5d6eac: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d5d6eac: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d5d6eac: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55c03d5d629b: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55c03d5d629b: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55c03d5d629b: alloc::slice::<impl [T]>::to_vec (alloc/src/slice.rs:416:14)",
"0x55c03d5b63bf: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:248:33)",
"0x55c03d57458d: winter_prover::Prover::generate_proof (prover/src/lib.rs:590:25)",
"0x55c03d2a68f8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d2a68f8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d2a68f8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d4934b9: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x55c03d4002cb: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:74:33)",
"0x55c03d1401d2: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:86:57)",
"0x55c03d3f9e43: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:236:46)",
"0x55c03d34415a: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:209:50)",
"0x55c03d376525: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:283:29)",
"0x55c03d59b9ab: winter_math::utils::get_power_series_with_offset (src/utils/mod.rs:75:31)",
"0x55c03d4fab28: winter_prover::constraints::evaluation_table::evaluate_divisor (src/constraints/evaluation_table.rs:493:18)",
"0x55c03d4fea3c: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:205:26)",
"0x55c03d3d0cac: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d3e6fc9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d300872: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d4385c3: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:152:9)",
"0x55c03d442204: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:31)",
"0x55c03d59f372: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:116:21)",
"0x55c03d3f632d: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:483:19)",
"0x55c03d3f3a2d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55c03d1fab7b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x55c03d497ac9: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x55c03d497ac9: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x55c03d1baa9a: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:1006:17)",
"0x55c03d39a651: alloc::collections::btree::set::BTreeSet<T,A>::insert (collections/btree/set.rs:903:9)",
"0x55c03d39b5a2: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d27b221: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d27b221: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d27b221: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d27b221: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32f3fb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d32a7c6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d4634eb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d38fe0c: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors (src/constraints/boundary.rs:82:9)",
"0x55c03d22a135: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d22a135: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d22a135: <T as alloc::vec::spec_from_elem::SpecFromElem>::from_elem (src/vec/spec_from_elem.rs:15:21)",
"0x55c03d310e04: alloc::vec::from_elem (src/vec/mod.rs:2535:5)",
"0x55c03d4f39c0: winter_prover::trace::Trace::validate (src/trace/mod.rs:177:13)",
"0x55c03d575bc8: winter_prover::Prover::generate_proof (prover/src/lib.rs:370:17)",
"0x55c03d4f7abc: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:26:5)",
"0x55c03d3fa6da: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:255:13)",
"0x55c03d28c1a1: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d28c1a1: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d28c1a1: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d28c1a1: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d33140b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d329db6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d464f7b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d13fea9: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:74:41)",
"0x55c03d3a7832: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d2a6cb8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d2a6cb8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d2a6cb8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d571a18: winter_prover::Prover::generate_proof (prover/src/lib.rs:298:39)",
"0x55c03d5e59fd: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:483:19)",
"0x55c03d5e55fd: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55c03d5e0b0b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x55c03d5eb41b: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x55c03d5eb41b: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x55c03d5d9343: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:1006:17)",
"0x55c03d5e6887: alloc::collections::btree::set::BTreeSet<T,A>::insert (collections/btree/set.rs:903:9)",
"0x55c03d4f3349: winter_prover::trace::Trace::validate (src/trace/mod.rs:122:26)",
"0x55c03d3f5b0d: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:483:19)",
"0x55c03d3f426d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55c03d1fb36b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x55c03d1d4f41: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x55c03d1d8277: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x55c03d23e76b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x55c03d62d12e: <winter_math::field::f128::BaseElement as winter_math::field::traits::StarkField>::get_modulus_le_bytes (field/f128/mod.rs:177:9)",
"0x55c03d59f87f: winter_air::proof::context::Context::new (src/proof/context.rs:35:34)",
"0x55c03d55392f: winter_prover::channel::ProverChannel<A,E,H,R>::new::{{closure}} (prover/src/channel.rs:68:24)",
"0x55c03d6322aa: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:475:9)",
"0x55c03d5d275c: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d5d2fa9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d5d3a09: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d5caed0: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:13)",
"0x55c03cf9dd95: winterfell::main (examples/src/main.rs:78:24)",
"0x55c03d1c21c3: winter_utils::transpose_slice (core/src/lib.rs:216:53)",
"0x55c03d5aebb5: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:200:38)",
"0x55c03d5b78e9: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:184:22)",
"0x55c03d5d5717: alloc::alloc::exchange_malloc (alloc/src/alloc.rs:334:18)",
"0x55c03d5cc24d: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:357:24)",
"0x55c03d5bc512: winter_math::fft::serial::evaluate_poly_with_offset (src/fft/serial.rs:38:31)",
"0x55c03d405f50: winter_math::fft::evaluate_poly_with_offset (src/fft/mod.rs:216:18)",
"0x55c03d4b53d1: winter_prover::composer::DeepCompositionPoly<E>::evaluate (src/composer/mod.rs:199:9)",
"0x55c03d227f89: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x55c03d510eca: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:312:26)",
"0x55c03d287187: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d287187: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d287187: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d287187: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32dafe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d327c79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d4625ee: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d4ad797: winter_verifier::composer::DeepComposer<E>::new (verifier/src/composer.rs:30:37)",
"0x55c03d3756b5: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:248:29)",
"0x55c03d38d70c: winter_fri::verifier::FriVerifier<E,C,H,R>::verify (src/verifier/mod.rs:222:18)",
"0x55c03d524c03: winter_verifier::perform_verification (verifier/src/lib.rs:320:5)",
"0x55c03d5ea72a: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d5d7439: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d5d7812: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d5d76ec: winter_fri::folding::fold_positions (src/folding/mod.rs:170:13)",
"0x55c03d375f63: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:254:17)",
"0x55c03d3d24bc: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d3e6909: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d30196b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d3934e9: winter_prover::constraints::boundary::BoundaryConstraintGroup<E>::from_main_constraints (src/constraints/boundary.rs:174:17)",
"0x55c03d28cc67: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d28cc67: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d28cc67: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d28cc67: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d33168e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d325cd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d463ede: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d386d1f: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic::{{closure}} (src/verifier/mod.rs:276:17)",
"0x55c03d2a3ff7: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:88:9)",
"0x55c03d413ebb: winter_air::air::Air::get_deep_composition_coefficients (src/air/mod.rs:534:17)",
"0x55c03d141030: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:144:46)",
"0x55c03d2868a7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d2868a7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d2868a7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d2868a7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32ebee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d3224c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d46249e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d445e1f: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:61:26)",
"0x55c03d4ac3ac: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:178:30)",
"0x55c03d3bb22c: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d3e7569: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d301bb2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d57589d: winter_prover::Prover::generate_proof (prover/src/lib.rs:408:17)",
"0x55c03d1bf535: winter_air::air::assertions::Assertion<E>::single (air/assertions/mod.rs:68:21)",
"0x55c03d1bb8c1: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:62:13)",
"0x55c03d39f4a2: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d2605ca: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d2605ca: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d2605ca: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d2605ca: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55c03d32e54e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d325327: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d399ebe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d4c3b66: winter_air::air::boundary::prepare_assertions (air/boundary/mod.rs:217:5)",
"0x55c03d1c0e0b: winter_utils::uninit_vector (core/src/lib.rs:88:22)",
"0x55c03d53de95: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:188:39)",
"0x55c03d598b60: winter_prover::Prover::build_constraint_commitment (prover/src/lib.rs:706:26)",
"0x55c03d572c32: winter_prover::Prover::generate_proof (prover/src/lib.rs:472:37)",
"0x55c03d502b57: winter_prover::constraints::evaluation_table::build_transition_constraint_degrees (src/constraints/evaluation_table.rs:447:9)",
"0x55c03d50051d: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::new (src/constraints/evaluation_table.rs:74:13)",
"0x55c03d2a5b46: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d2a5b46: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d2a5b46: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55c03d53b82e: <winter_prover::matrix::col_matrix::ColMatrix<E> as core::clone::Clone>::clone (src/matrix/col_matrix.rs:32:5)",
"0x55c03d539f07: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:88:9)",
"0x55c03d4b935c: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:293:57)",
"0x55c03d632aea: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d632d19: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d631eac: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d631599: <alloc::vec::Vec<u8> as winter_utils::serde::byte_writer::ByteWriter>::write_u8 (src/serde/byte_writer.rs:79:9)",
"0x55c03d5d4a1a: <winter_air::air::trace_info::TraceLayout as winter_utils::serde::Serializable>::write_into (src/air/trace_info.rs:301:9)",
"0x55c03d531a59: winter_verifier::verify (verifier/src/lib.rs:95:32)",
"0x55c03d21e24b: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:113:21)",
"0x55c03d141509: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x55c03d354201: winter_fri::verifier::get_query_values (src/verifier/mod.rs:351:9)",
"0x55c03d3762ef: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:267:17)",
"0x55c03d572016: winter_prover::Prover::generate_proof (prover/src/lib.rs:413:33)",
"0x55c03d3f6b4d: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:483:19)",
"0x55c03d3f49ed: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55c03d1faf6b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x55c03d4986ef: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x55c03d4986ef: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x55c03d1ba4c3: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:1006:17)",
"0x55c03d226e1d: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:212:13)",
"0x55c03d343e62: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:190:24)",
"0x55c03d445a59: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:96:23)",
"0x55c03d4c36ce: winter_air::air::boundary::group_constraints::{{closure}} (air/boundary/mod.rs:169:42)",
"0x55c03d496a7d: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:43)",
"0x55c03d4c2b18: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:168:21)",
"0x55c03d4c629c: winter_air::air::boundary::BoundaryConstraints<E>::new (air/boundary/mod.rs:108:32)",
"0x55c03d410a9a: winter_air::air::Air::get_boundary_constraints (src/air/mod.rs:362:9)",
"0x55c03d4383d7: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:185:23)",
"0x55c03d57460c: winter_prover::Prover::generate_proof (prover/src/lib.rs:593:29)",
"0x55c03d73b900: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d6a5ebc: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d6a5ebc: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d6a5ebc: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55c03d6786a5: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55c03d6786a5: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55c03d6786a5: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2628:9)",
"0x55c03d536bca: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:32:5)",
"0x55c03d21ed86: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:88:9)",
"0x55c03d140fca: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:112:71)",
"0x55c03d343dec: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:189:47)",
"0x55c03d39f1a2: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d283f87: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d283f87: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d283f87: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d283f87: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32da0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d322307: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d463d2e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d573089: winter_prover::Prover::generate_proof (prover/src/lib.rs:491:51)",
"0x55c03d4fae8f: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:411:36)",
"0x55c03d4f8990: winter_prover::constraints::evaluation_table::acc_column (src/constraints/evaluation_table.rs:346:13)",
"0x55c03d4fdbbf: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:175:13)",
"0x55c03d5be696: winter_fri::utils::hash_values (fri/src/utils.rs:46:47)",
"0x55c03d5aec1f: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:201:34)",
"0x55c03d3f839e: winter_crypto::merkle::build_merkle_nodes (src/merkle/mod.rs:354:30)",
"0x55c03d3fbca5: winter_crypto::merkle::MerkleTree<H>::new (src/merkle/mod.rs:126:21)",
"0x55c03d5aec5a: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:203:13)",
"0x55c03d38fea9: winter_prover::constraints::boundary::BoundaryConstraints<E>::get_divisors::{{closure}} (src/constraints/boundary.rs:82:31)",
"0x55c03d475c8f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x55c03d5c644d: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:151:28)",
"0x55c03d5ca742: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:179:29)",
"0x55c03d4b298b: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:80:38)",
"0x55c03d53df56: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_rows (src/matrix/row_matrix.rs:202:9)",
"0x55c03d4be442: winter_prover::trace::poly_table::TracePolyTable<E>::get_ood_frame (src/trace/poly_table.rs:72:9)",
"0x55c03d4ba446: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:493:32)",
"0x55c03d47f87a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x55c03d17e2e2: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:215:27)",
"0x55c03d44845b: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x55c03d46d9f6: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:856:9)",
"0x55c03d25e951: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d25e951: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d25e951: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d25e951: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32d94b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d323276: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d463b0b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d13fd19: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:65:47)",
"0x55c03d536bdf: <winter_air::proof::ood_frame::OodFrame as core::clone::Clone>::clone (src/proof/ood_frame.rs:33:5)",
"0x55c03d3bad5c: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d3e75c9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d300c02: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d52545d: winter_verifier::perform_verification (verifier/src/lib.rs:177:9)",
"0x55c03d25a4c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d25a4c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d25a4c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d25a4c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d33087e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d326617: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d4655be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d5718a5: winter_prover::Prover::generate_proof (prover/src/lib.rs:286:23)",
"0x55c03d5e5d3d: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:483:19)",
"0x55c03d5e553d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55c03d5e0a4b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x55c03d5eb0b8: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x55c03d5eb0b8: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x55c03d5d9207: alloc::collections::btree::map::BTreeMap<K,V,A>::insert (collections/btree/map.rs:1006:17)",
"0x55c03d5e44a0: winter_crypto::merkle::map_indexes (src/merkle/mod.rs:383:9)",
"0x55c03d55346f: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:76:40)",
"0x55c03d1bb3b6: <examples::do_work::air::PublicInputs as winter_math::field::traits::ToElements<winter_math::field::f128::BaseElement>>::to_elements (src/do_work/air.rs:13:9)",
"0x55c03d531bc8: winter_verifier::verify (verifier/src/lib.rs:97:38)",
"0x55c03d3a2d82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d27b667: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d27b667: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d27b667: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d27b667: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32e35e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d3231d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d461dce: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d599889: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces (src/do_work/prover.rs:30:9)",
"0x55c03d3a03a2: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d287807: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d287807: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d287807: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d287807: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32f75e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d329c17: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d46245e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d570e56: winter_prover::Prover::generate_proof (prover/src/lib.rs:205:38)",
"0x55c03d446556: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d446556: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d446556: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:139:27)",
"0x55c03d313565: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55c03d313565: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55c03d313565: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2628:9)",
"0x55c03d4f7ad3: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:27:5)",
"0x55c03d2a4027: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:88:9)",
"0x55c03d4b24d2: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:141:26)",
"0x55c03d57334b: winter_prover::Prover::generate_proof (prover/src/lib.rs:514:9)",
"0x55c03d5e5b9d: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:483:19)",
"0x55c03d5e577d: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55c03d5e0c8b: alloc::collections::btree::node::InternalNode<K,V>::new (collections/btree/node.rs:115:28)",
"0x55c03d5db2f1: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Internal>::new_internal (collections/btree/node.rs:227:37)",
"0x55c03d5dba07: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal>::push_internal_level::{{closure}} (collections/btree/node.rs:594:47)",
"0x55c03d5eae7b: alloc::collections::btree::mem::take_mut::{{closure}} (collections/btree/mem.rs:12:25)",
"0x55c03d221302: winter_crypto::merkle::proofs::BatchMerkleProof<H>::deserialize (src/merkle/proofs.rs:489:27)",
"0x55c03d24f0a2: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:318:28)",
"0x55c03d128d93: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:329:13)",
"0x55c03d403d15: winter_math::fft::get_inv_twiddles (src/fft/mod.rs:519:28)",
"0x55c03d5b9f06: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:219:28)",
"0x55c03d265987: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d265987: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d265987: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d265987: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32e31e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d327fd7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d4635de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d438588: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:148:28)",
"0x55c03d5c349b: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:65:13)",
"0x55c03d29ad01: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d29ad01: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d29ad01: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d29ad01: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d3311cb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d323776: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d463f8b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d570f23: winter_prover::Prover::generate_proof (prover/src/lib.rs:209:39)",
"0x55c03d5e9b81: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d5e9b81: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d5e9b81: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d5e9b81: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55c03d5e9ffe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d5e9fc7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d5e680e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d5e4749: winter_crypto::merkle::normalize_indexes (src/merkle/mod.rs:401:5)",
"0x55c03cfb0f09: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:245:9)",
"0x55c03cfb2a8a: alloc::raw_vec::finish_grow (alloc/src/raw_vec.rs:475:9)",
"0x55c03cfb3c4a: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03cfb3f28: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:289:28)",
"0x55c03cfb975d: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:293:13)",
"0x55c03cfb975d: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:909:18)",
"0x55c03cf9c811: alloc::string::String::reserve (alloc/src/string.rs:1027:9)",
"0x55c03cf9c811: <alloc::string::String as core::iter::traits::collect::Extend<char>>::extend (alloc/src/string.rs:2086:14)",
"0x55c03cf9c8ec: <alloc::string::String as core::iter::traits::collect::FromIterator<char>>::from_iter (alloc/src/string.rs:2006:9)",
"0x55c03d5c3460: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:64:23)",
"0x55c03d55413f: winter_fri::folding::get_inv_offsets (src/folding/mod.rs:186:5)",
"0x55c03d554804: winter_fri::folding::apply_drp (src/folding/mod.rs:91:23)",
"0x55c03d5cd4c0: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:365:21)",
"0x55c03d5cc956: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:146:27)",
"0x55c03d3a8d22: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d272d51: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d272d51: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d272d51: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d272d51: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d330d6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d3274b6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d46455b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d58c9b6: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:630:42)",
"0x55c03d54304a: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:224:41)",
"0x55c03d540053: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:213:9)",
"0x55c03d58d200: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:659:26)",
"0x55c03d445e2e: winter_air::air::divisor::ConstraintDivisor<B>::from_transition (src/air/divisor.rs:64:19)",
"0x55c03d59ed9e: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:54:23)",
"0x55c03d151c12: <winter_verifier::channel::TraceOodFrame<E> as core::clone::Clone>::clone (verifier/src/channel.rs:441:5)",
"0x55c03d12005e: core::option::Option<&T>::cloned (core/src/option.rs:1859:29)",
"0x55c03d494d14: <core::iter::adapters::cloned::Cloned<I> as core::iter::traits::iterator::Iterator>::next (iter/adapters/cloned.rs:40:9)",
"0x55c03d375724: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:249:31)",
"0x55c03d510d05: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:306:32)",
"0x55c03d4fd8f2: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::into_comb_poly (src/constraints/evaluation_table.rs:180:28)",
"0x55c03d73bf7a: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d73c6f9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d73ae6c: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d221ff2: winter_crypto::merkle::proofs::BatchMerkleProof<H>::serialize_nodes (src/merkle/proofs.rs:435:9)",
"0x55c03d246263: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:244:21)",
"0x55c03d299647: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d299647: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d299647: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d299647: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d3301ce: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d322937: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d4629fe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d4fb6a7: winter_prover::constraints::evaluation_table::get_transition_poly_degree (src/constraints/evaluation_table.rs:474:27)",
"0x55c03d260c87: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d260c87: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d260c87: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d260c87: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d3302fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d325c47: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d4646de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d4a799b: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:152:9)",
"0x55c03d5f51d9: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:245:9)",
"0x55c03d613220: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d2a6df8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d2a6df8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d2a6df8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d245f94: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:219:26)",
"0x55c03d4384e9: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:189:5)",
"0x55c03d5cff90: <winter_air::proof::context::Context as winter_utils::serde::Deserializable>::read_from (src/proof/context.rs:184:35)",
"0x55c03d5ca1c7: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:27)",
"0x55c03d5cbc7e: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:168:21)",
"0x55c03d5ca408: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:176:34)",
"0x55c03d125c40: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:476:24)",
"0x55c03d52f929: winter_verifier::perform_verification::{{closure}} (verifier/src/lib.rs:214:32)",
"0x55c03d47927f: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x55c03d546d42: <winter_prover::matrix::row_matrix::RowMatrix<E> as core::clone::Clone>::clone (src/matrix/row_matrix.rs:33:5)",
"0x55c03d5459e7: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:88:9)",
"0x55c03d58cc07: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:645:31)",
"0x55c03d43ccbb: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:162:42)",
"0x55c03d193a58: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:215:27)",
"0x55c03d1e725f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x55c03d1f0114: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x55c03d1e9af7: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x55c03d4f559d: winter_air::proof::table::Table<E>::from_bytes (src/proof/table.rs:59:19)",
"0x55c03d256354: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:125:28)",
"0x55c03d402d1a: winter_math::fft::get_twiddles (src/fft/mod.rs:479:24)",
"0x55c03d38f373: winter_prover::domain::StarkDomain<B>::new (prover/src/domain.rs:39:30)",
"0x55c03d151cf3: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:35:22)",
"0x55c03d4a76b3: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:143:25)",
"0x55c03d21e415: winter_air::proof::ood_frame::OodFrame::parse (src/proof/ood_frame.rs:122:27)",
"0x55c03d54bf21: winter_prover::channel::ProverChannel<A,E,H,R>::get_query_positions (prover/src/channel.rs:174:9)",
"0x55c03d5187e2: winter_fri::proof::FriProof::parse_remainder (fri/src/proof.rs:172:25)",
"0x55c03d1407b3: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:100:29)",
"0x55c03d39d3a2: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d275757: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d275757: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d275757: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d275757: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d30b86c: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:167:20)",
"0x55c03d321d5c: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d46188e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d501262: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::fragments (src/constraints/evaluation_table.rs:126:13)",
"0x55c03d5091e7: winter_fri::proof::FriProofLayer::new (fri/src/proof.rs:258:20)",
"0x55c03d24fd12: winter_air::proof::queries::Queries::new (src/proof/queries.rs:65:26)",
"0x55c03d5c33ee: winter_prover::constraints::commitment::ConstraintCommitment<E,H>::query (src/constraints/commitment.rs:68:9)",
"0x55c03d3d6cec: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d3e6ae9: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d302e0b: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d141819: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:127:13)",
"0x55c03d3a1892: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d288b47: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d288b47: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d288b47: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d288b47: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32dcee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d32a257: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d46334e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d58cb53: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:638:34)",
"0x55c03d4ba149: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:211:31)",
"0x55c03d476ec6: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x55c03d18f7f8: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:215:27)",
"0x55c03d450faa: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x55c03d47018a: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:856:9)",
"0x55c03d538290: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:197:28)",
"0x55c03d57538b: winter_prover::Prover::generate_proof (prover/src/lib.rs:440:13)",
"0x55c03d510fd7: winter_fri::proof::FriProofLayer::parse (fri/src/proof.rs:323:28)",
"0x55c03d3ac302: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d29a897: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d29a897: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d29a897: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d29a897: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32d4fe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d32a1d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d46384e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d376466: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:274:22)",
"0x55c03d3bcf0c: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d3e7749: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d2ff15e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d24f51f: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:307:13)",
"0x55c03d632d48: alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle (alloc/src/raw_vec.rs:289:28)",
"0x55c03d631f5d: alloc::raw_vec::RawVec<T,A>::reserve (alloc/src/raw_vec.rs:293:13)",
"0x55c03d631f5d: alloc::vec::Vec<T,A>::reserve (src/vec/mod.rs:909:18)",
"0x55c03d631cd3: alloc::vec::Vec<T,A>::append_elements (src/vec/mod.rs:1941:9)",
"0x55c03d631cd3: <alloc::vec::Vec<T,A> as alloc::vec::spec_extend::SpecExtend<&T,core::slice::iter::Iter<T>>>::spec_extend (src/vec/spec_extend.rs:55:23)",
"0x55c03d631ddd: alloc::vec::Vec<T,A>::extend_from_slice (src/vec/mod.rs:2387:9)",
"0x55c03d4179f5: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:505:13)",
"0x55c03d5237b9: winter_verifier::perform_verification (verifier/src/lib.rs:183:13)",
"0x55c03d4ac3c7: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:179:30)",
"0x55c03d287e91: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d287e91: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d287e91: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d287e91: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d33151b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d327776: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d464dab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d58ca83: winter_prover::Prover::build_trace_commitment (prover/src/lib.rs:634:36)",
"0x55c03d3be71c: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d3e6879: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d301701: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d5aef39: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:210:9)",
"0x55c03d5751e8: winter_prover::Prover::generate_proof (prover/src/lib.rs:448:17)",
"0x55c03d5ddb4c: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x55c03d5defc0: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x55c03d5de058: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x55c03d14176d: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:126:13)",
"0x55c03d291947: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d291947: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d291947: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d291947: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d330cee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d325497: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d4623fe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d4efb43: winter_prover::trace::trace_table::TraceTable<B>::with_meta (src/trace/trace_table.rs:132:32)",
"0x55c03d4ef45b: winter_prover::trace::trace_table::TraceTable<B>::fill (src/trace/trace_table.rs:235:25)",
"0x55c03d5c57c2: examples::do_work::prover::build_do_work_trace (src/do_work/prover.rs:65:5)",
"0x55c03d599958: examples::do_work::prover::DoWorkProver<H>::build_do_work_traces::{{closure}} (src/do_work/prover.rs:32:27)",
"0x55c03d24fe2e: winter_air::proof::queries::Queries::new (src/proof/queries.rs:77:21)",
"0x55c03d226e34: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:213:13)",
"0x55c03d3fb71e: winter_crypto::merkle::MerkleTree<H>::verify_batch (src/merkle/mod.rs:333:21)",
"0x55c03d28891b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d28891b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d28891b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d28891b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55c03d32f77e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d3221bc: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d5367de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d3fa642: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:242:43)",
"0x55c03d5c554c: <winter_air::options::ProofOptions as winter_math::field::traits::ToElements<E>>::to_elements (air/src/options.rs:218:9)",
"0x55c03d59f3b8: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:119:28)",
"0x55c03d24f46a: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:306:31)",
"0x55c03d285967: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d285967: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d285967: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d285967: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32ffbe: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d32a197: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d464b2e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d538342: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns (src/matrix/col_matrix.rs:198:23)",
"0x55c03d403900: winter_math::fft::infer_degree (src/fft/mod.rs:581:24)",
"0x55c03d291731: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d291731: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d291731: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d291731: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32f1eb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d322a56: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d465adb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d140039: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:82:40)",
"0x55c03d3acc02: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d28bb21: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d28bb21: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d28bb21: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d28bb21: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32f6eb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d322496: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d465f8b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d523ab2: winter_verifier::perform_verification (verifier/src/lib.rs:212:41)",
"0x55c03d5d1dbc: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d5d2f49: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d5d3782: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d5cb1c4: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:164:13)",
"0x55c03d3a1b92: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d292a47: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d292a47: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d292a47: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d292a47: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d30a83b: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:167:20)",
"0x55c03d323107: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d46265e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d43fe32: winter_prover::trace::commitment::TraceCommitment<E,H>::new (src/trace/commitment.rs:46:26)",
"0x55c03d44216d: winter_prover::trace::commitment::TraceCommitment<E,H>::query (src/trace/commitment.rs:94:26)",
"0x55c03d1bb856: <examples::do_work::air::DoWorkAir as winter_air::air::Air>::get_assertions (src/do_work/air.rs:61:13)",
"0x55c03d559e66: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:63:9)",
"0x55c03d525037: winter_verifier::perform_verification (verifier/src/lib.rs:223:43)",
"0x55c03d261337: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d261337: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d261337: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d261337: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32ee9e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d3265d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d46428e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d537e33: winter_prover::matrix::col_matrix::ColMatrix<E>::evaluate_columns_at (src/matrix/col_matrix.rs:253:9)",
"0x55c03d5c595b: <winter_air::air::trace_info::TraceLayout as winter_math::field::traits::ToElements<E>>::to_elements (src/air/trace_info.rs:285:9)",
"0x55c03d59f22c: <winter_air::proof::context::Context as winter_math::field::traits::ToElements<E>>::to_elements (src/proof/context.rs:110:26)",
"0x55c03d3cf96c: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d3e6789: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d303db2: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d2465ea: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:240:13)",
"0x55c03d3aa202: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d289641: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d289641: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d289641: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d289641: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32df6b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d3264a6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d4656fb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d5533b8: winter_prover::channel::ProverChannel<A,E,H,R>::new (prover/src/channel.rs:66:38)",
"0x55c03d5b66c3: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:255:29)",
"0x55c03d4004a0: winter_air::proof::commitments::Commitments::parse (src/proof/commitments.rs:81:31)",
"0x55c03d59ef6f: winter_air::air::transition::TransitionConstraints<E>::new (air/transition/mod.rs:65:35)",
"0x55c03d55996a: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:25:25)",
"0x55c03d438303: winter_prover::trace::commitment::build_segment_queries (src/trace/commitment.rs:154:24)",
"0x55c03d151d04: winter_air::air::transition::frame::EvaluationFrame<E>::new (air/transition/frame.rs:36:19)",
"0x55c03d445be0: winter_air::air::divisor::ConstraintDivisor<B>::from_assertion (src/air/divisor.rs:100:23)",
"0x55c03d33e824: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:28)",
"0x55c03d5757fa: winter_prover::Prover::generate_proof (prover/src/lib.rs:407:21)",
"0x55c03d4b2bf9: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:136:17)",
"0x55c03d24694e: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:213:13)",
"0x55c03d3a6352: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d29e197: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d29e197: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d29e197: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d29e197: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32f7be: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d328ed7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d23a18e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d5711df: winter_prover::Prover::generate_proof (prover/src/lib.rs:243:41)",
"0x55c03d55481a: winter_fri::folding::apply_drp (src/folding/mod.rs:92:24)",
"0x55c03d43bca8: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:150:25)",
"0x55c03d47bf1a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x55c03d199985: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:215:27)",
"0x55c03d4feb0e: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:216:28)",
"0x55c03d263f27: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d263f27: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d263f27: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d263f27: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32d85e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d325d17: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d463ebe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d4ac73a: winter_verifier::composer::DeepComposer<E>::compose_constraint_evaluations (verifier/src/composer.rs:197:9)",
"0x55c03d3f666d: alloc::boxed::Box<T,A>::try_new_uninit_in (alloc/src/boxed.rs:483:19)",
"0x55c03d3f3bad: alloc::boxed::Box<T,A>::new_uninit_in (alloc/src/boxed.rs:448:15)",
"0x55c03d1fa90b: alloc::collections::btree::node::LeafNode<K,V>::new (collections/btree/node.rs:83:28)",
"0x55c03d497ebc: alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf>::new_leaf (collections/btree/node.rs:217:29)",
"0x55c03d497ebc: alloc::collections::btree::map::entry::VacantEntry<K,V,A>::insert (btree/map/entry.rs:355:32)",
"0x55c03d496af1: alloc::collections::btree::map::entry::Entry<K,V,A>::or_insert_with (btree/map/entry.rs:187:30)",
"0x55c03d39dca2: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d2923c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d2923c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d2923c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d2923c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d331c2e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d329e79: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d4651be: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d390efa: winter_prover::constraints::boundary::BoundaryConstraints<E>::new (src/constraints/boundary.rs:50:26)",
"0x55c03d31154b: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d31154b: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d31154b: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d31154b: <[V] as alloc::slice::Concat<T>>::concat (alloc/src/slice.rs:712:26)",
"0x55c03d310e8b: alloc::slice::<impl [T]>::concat (alloc/src/slice.rs:561:9)",
"0x55c03d543307: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:37)",
"0x55c03d225bf9: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:218:27)",
"0x55c03d12118c: winter_fri::verifier::channel::VerifierChannel::read_layer_queries (src/verifier/channel.rs:84:9)",
"0x55c03d27638e: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d27638e: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d27638e: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d27638e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55c03d330cab: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d328b06: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d464e6b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d256484: winter_air::proof::queries::Queries::parse (src/proof/queries.rs:126:30)",
"0x55c03d4f7bb4: <winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E> as core::clone::Clone>::clone (src/constraints/evaluation_table.rs:35:5)",
"0x55c03d25d931: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d25d931: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d25d931: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d25d931: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32f66b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d323d76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d461eab: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d128c19: winter_verifier::channel::TraceQueries<E,H>::new (verifier/src/channel.rs:323:35)",
"0x55c03d1f4861: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1239:32)",
"0x55c03d1f7ef9: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Internal>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:997:30)",
"0x55c03d1e9fd7: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1037:27)",
"0x55c03d54f243: winter_prover::channel::ProverChannel<A,E,H,R>::get_constraint_composition_coeffs (prover/src/channel.rs:144:9)",
"0x55c03d5d5c99: <alloc::alloc::Global as core::alloc::Allocator>::allocate (alloc/src/alloc.rs:245:9)",
"0x55c03d5d14f2: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d5d35f8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d5d35f8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d5d35f8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d5ca322: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:172:33)",
"0x55c03d5c6614: <winter_air::proof::ood_frame::OodFrame as winter_utils::serde::Deserializable>::read_from (src/proof/ood_frame.rs:155:27)",
"0x55c03d2a25ee: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d2a25ee: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d2a25ee: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d2a25ee: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55c03d32ecfb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d3288d6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d46332b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d24efc5: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:310:30)",
"0x55c03d343ee3: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:194:21)",
"0x55c03d671bd8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d671bd8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d671bd8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d4feaa0: winter_prover::constraints::evaluation_table::ConstraintEvaluationTable<E>::validate_transition_degrees (src/constraints/evaluation_table.rs:214:34)",
"0x55c03d33eb4b: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:129:9)",
"0x55c03d3a9322: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d26c4a9: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d26c4a9: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d26c4a9: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d26c4a9: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55c03d330ecb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d325a26: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d4951cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d134d5a: winter_verifier::channel::VerifierChannel<E,H>::read_ood_traces_frame (verifier/src/channel.rs:182:32)",
"0x55c03d27cd57: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d27cd57: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d27cd57: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d27cd57: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32ffde: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d3239d7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d463b2e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d375641: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:237:29)",
"0x55c03d1415fb: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:121:17)",
"0x55c03d246492: winter_air::proof::queries::JointTraceQueries::new (src/proof/queries.rs:231:17)",
"0x55c03d446a5d: <winter_air::air::divisor::ConstraintDivisor<B> as core::clone::Clone>::clone (src/air/divisor.rs:28:5)",
"0x55c03d33e8b9: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate (src/constraints/evaluator.rs:88:33)",
"0x55c03d5cbac2: <winter_air::proof::queries::Queries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:164:22)",
"0x55c03d2a6e48: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d2a6e48: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d2a6e48: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d571ae4: winter_prover::Prover::generate_proof (prover/src/lib.rs:301:32)",
"0x55c03d4fafb4: winter_prover::constraints::evaluation_table::get_inv_evaluation (src/constraints/evaluation_table.rs:424:5)",
"0x55c03d21d206: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:63:9)",
"0x55c03d5cbf62: <winter_air::proof::queries::JointTraceQueries as winter_utils::serde::Deserializable>::read_from (src/proof/queries.rs:348:22)",
"0x55c03d543256: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:228:38)",
"0x55c03d2a69e8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d2a69e8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d2a69e8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d5a411d: winter_fri::prover::query_layer (src/prover/mod.rs:300:43)",
"0x55c03d3bd8ac: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d3e6a29: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d303079: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d525276: winter_verifier::perform_verification (verifier/src/lib.rs:182:9)",
"0x55c03d3441af: winter_math::polynom::interpolate_batch (src/polynom/mod.rs:211:44)",
"0x55c03d3d332c: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d3e6939: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d2fd9f5: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d4fa769: winter_prover::constraints::evaluation_table::make_fragments::{{closure}} (src/constraints/evaluation_table.rs:328:17)",
"0x55c03d1b129f: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:237:21)",
"0x55c03d13fb30: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:62:12)",
"0x55c03d5d11f2: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d5d35a8: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d5d35a8: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d5d35a8: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d5cc839: winter_utils::serde::Deserializable::read_batch_from (src/serde/mod.rs:144:26)",
"0x55c03d5ccc8b: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:211:22)",
"0x55c03d5ca727: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:188:24)",
"0x55c03d27a347: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d27a347: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d27a347: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d27a347: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32ea6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d3222c9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d46511e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d571043: winter_prover::Prover::generate_proof (prover/src/lib.rs:217:20)",
"0x55c03d5b6399: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:272:25)",
"0x55c03d5cf61d: <winter_air::proof::commitments::Commitments as winter_utils::serde::Deserializable>::read_from (src/proof/commitments.rs:108:22)",
"0x55c03d5ca1ac: winter_air::proof::StarkProof::from_bytes (src/proof/mod.rs:167:27)",
"0x55c03d4b2d67: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:137:17)",
"0x55c03d5cd33e: <winter_fri::proof::FriProofLayer as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:361:22)",
"0x55c03d4a7c12: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:73:34)",
"0x55c03d4f9ff1: winter_prover::constraints::evaluation_table::uninit_matrix::{{closure}} (src/constraints/evaluation_table.rs:310:36)",
"0x55c03d48221a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x55c03d40c985: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2481:21)",
"0x55c03d21d357: winter_air::proof::ood_frame::OodFrame::set_trace_states (src/proof/ood_frame.rs:59:17)",
"0x55c03d54dea0: winter_prover::channel::ProverChannel<A,E,H,R>::send_ood_trace_states::{{closure}} (prover/src/channel.rs:112:47)",
"0x55c03d5c13aa: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:67:5)",
"0x55c03d5c1667: <T as alloc::borrow::ToOwned>::to_owned (alloc/src/borrow.rs:88:9)",
"0x55c03d524f46: winter_verifier::perform_verification (verifier/src/lib.rs:225:13)",
"0x55c03d572717: winter_prover::Prover::generate_proof (prover/src/lib.rs:442:35)",
"0x55c03d1366bc: winter_verifier::channel::VerifierChannel<E,H>::read_queried_trace_states (verifier/src/channel.rs:220:13)",
"0x55c03d4a887e: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:140:13)",
"0x55c03d3aae02: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d29d071: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d29d071: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d29d071: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d29d071: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32f86b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d328be6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d46303b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d523b7f: winter_verifier::perform_verification (verifier/src/lib.rs:216:40)",
"0x55c03d3a3382: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d2a4e5c: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d2a4e5c: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d2a4e5c: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:162:25)",
"0x55c03d312e65: alloc::slice::hack::to_vec (alloc/src/slice.rs:111:9)",
"0x55c03d312e65: alloc::slice::<impl [T]>::to_vec_in (alloc/src/slice.rs:441:9)",
"0x55c03d312e65: <alloc::vec::Vec<T,A> as core::clone::Clone>::clone (src/vec/mod.rs:2628:9)",
"0x55c03d573171: winter_prover::Prover::generate_proof (prover/src/lib.rs:500:39)",
"0x55c03d5b62f1: winter_fri::prover::FriProver<B,E,C,H>::build_proof (src/prover/mod.rs:245:26)",
"0x55c03d514d00: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:150:13)",
"0x55c03d4468a3: <T as alloc::slice::hack::ConvertVec>::to_vec (alloc/src/slice.rs:146:32)",
"0x55c03d3a4b72: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d260a57: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d260a57: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d260a57: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d260a57: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d30d5b8: alloc::vec::in_place_collect::<impl alloc::vec::spec_from_iter::SpecFromIter<T,I> for alloc::vec::Vec<T>>::from_iter (src/vec/in_place_collect.rs:167:20)",
"0x55c03d3258b9: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d4632fe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d5719f5: winter_prover::Prover::generate_proof (prover/src/lib.rs:291:36)",
"0x55c03d575330: winter_prover::Prover::generate_proof (prover/src/lib.rs:438:13)",
"0x55c03d25c327: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d25c327: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d25c327: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d25c327: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32fb6e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d32a5c7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d461b3e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d338cf1: <examples::do_work::DoWorkExample<H> as examples::Example>::verify (src/do_work/mod.rs:112:30)",
"0x55c03d5d7026: winter_fri::utils::map_positions_to_indexes (fri/src/utils.rs:23:16)",
"0x55c03d376040: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:256:36)",
"0x55c03d3a9f10: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d2665d6: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d2665d6: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d2665d6: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d2665d6: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55c03d32e39e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d325657: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d4b668e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d4b2594: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:142:33)",
"0x55c03d4b2968: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:79:38)",
"0x55c03d3a3c82: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d2a6858: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d2a6858: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d2a6858: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d571a5c: winter_prover::Prover::generate_proof (prover/src/lib.rs:299:44)",
"0x55c03d33acb0: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:149:33)",
"0x55c03d33ed5c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate::{{closure}} (src/constraints/evaluator.rs:122:17)",
"0x55c03d1b1338: <core::slice::iter::IterMut<T> as core::iter::traits::iterator::Iterator>::for_each (slice/iter/macros.rs:237:21)",
"0x55c03d26d2c7: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d26d2c7: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d26d2c7: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d26d2c7: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d3310ae: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d324a97: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d46584e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d4f9fba: winter_prover::constraints::evaluation_table::uninit_matrix (src/constraints/evaluation_table.rs:310:14)",
"0x55c03d3e323c: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d3e7419: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d30354e: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d514c55: winter_fri::proof::FriProof::parse_layers (fri/src/proof.rs:149:13)",
"0x55c03d5548d7: winter_fri::folding::apply_drp (src/folding/mod.rs:95:31)",
"0x55c03d5aedbb: winter_fri::prover::FriProver<B,E,C,H>::build_layer (src/prover/mod.rs:209:24)",
"0x55c03d4a7775: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:144:35)",
"0x55c03d4bbaa0: winter_prover::Prover::generate_proof::{{closure}} (prover/src/lib.rs:221:17)",
"0x55c03d478542: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x55c03d4e4e2e: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2481:21)",
"0x55c03d452e25: <core::iter::adapters::map::Map<I,F> as core::iter::traits::iterator::Iterator>::fold (iter/adapters/map.rs:124:9)",
"0x55c03d46f921: core::iter::traits::iterator::Iterator::for_each (iter/traits/iterator.rs:856:9)",
"0x55c03d24ec8c: winter_air::proof::queries::JointTraceQueries::parse (src/proof/queries.rs:303:13)",
"0x55c03d293917: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d293917: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d293917: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d293917: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d3319de: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d327d59: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d464c0e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d507bb6: winter_prover::constraints::composition_poly::segment (src/constraints/composition_poly.rs:93:5)",
"0x55c03d43cd59: winter_prover::trace::commitment::build_segment_queries::{{closure}}::{{closure}} (src/trace/commitment.rs:164:27)",
"0x55c03d43bbd6: winter_prover::trace::commitment::build_segment_queries::{{closure}} (src/trace/commitment.rs:159:13)",
"0x55c03d286d41: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d286d41: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d286d41: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d286d41: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32f0db: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d327e46: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d4625cb: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d13fde1: winter_verifier::channel::VerifierChannel<E,H>::new (verifier/src/channel.rs:70:43)",
"0x55c03d22599c: winter_crypto::merkle::proofs::BatchMerkleProof<H>::get_root (src/merkle/proofs.rs:164:46)",
"0x55c03d5245e4: winter_verifier::perform_verification (verifier/src/lib.rs:302:9)",
"0x55c03d506384: winter_prover::matrix::segments::Segment<B,_>::new (src/matrix/segments.rs:71:35)",
"0x55c03d540090: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:237:9)",
"0x55c03d507e4b: winter_prover::constraints::composition_poly::segment::{{closure}} (src/constraints/composition_poly.rs:96:22)",
"0x55c03d489208: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x55c03d55a77d: core::ops::try_trait::NeverShortCircuit<T>::wrap_mut_2::{{closure}} (src/ops/try_trait.rs:417:39)",
"0x55c03d125c1d: winter_verifier::channel::TraceOodFrame<E>::main_frame (verifier/src/channel.rs:475:27)",
"0x55c03d264a41: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d264a41: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d264a41: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d264a41: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32dc4b: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d328d76: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d46430b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d573156: winter_prover::Prover::generate_proof (prover/src/lib.rs:495:52)",
"0x55c03d5c13bf: <winter_air::air::coefficients::ConstraintCompositionCoefficients<E> as core::clone::Clone>::clone (src/air/coefficients.rs:68:5)",
"0x55c03d417918: winter_air::air::Air::get_constraint_composition_coefficients (src/air/mod.rs:510:13)",
"0x55c03d137dac: winter_verifier::channel::VerifierChannel<E,H>::read_constraint_evaluations (verifier/src/channel.rs:236:9)",
"0x55c03d52475c: winter_verifier::perform_verification (verifier/src/lib.rs:303:42)",
"0x55c03d4a4eb5: winter_verifier::composer::DeepComposer<E>::combine_compositions (verifier/src/composer.rs:210:26)",
"0x55c03d524b28: winter_verifier::perform_verification (verifier/src/lib.rs:316:28)",
"0x55c03d53ffc2: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows (src/matrix/row_matrix.rs:210:39)",
"0x55c03d5716fb: winter_prover::Prover::generate_proof (prover/src/lib.rs:268:13)",
"0x55c03d5cce52: <winter_fri::proof::FriProof as winter_utils::serde::Deserializable>::read_from (fri/src/proof.rs:215:25)",
"0x55c03d3aba02: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d266f8a: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d266f8a: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d266f8a: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d266f8a: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55c03d32d79e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d3294f7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d461efe: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d4c2a40: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:180:5)",
"0x55c03d4f0111: winter_prover::trace::trace_table::TraceTable<B>::with_meta::{{closure}} (src/trace/trace_table.rs:132:51)",
"0x55c03d489fba: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x55c03d40db05: core::iter::traits::iterator::Iterator::fold (iter/traits/iterator.rs:2481:21)",
"0x55c03d3ac902: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d26a631: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d26a631: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d26a631: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d26a631: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d3304bb: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d3290d6: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d46370b: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d4fa0ca: winter_prover::constraints::evaluation_table::make_fragments (src/constraints/evaluation_table.rs:323:22)",
"0x55c03d3a4e72: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d267227: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d267227: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d267227: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d267227: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d32de0e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d3284e7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d464d5e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d53c44e: winter_prover::matrix::row_matrix::build_segments (src/matrix/row_matrix.rs:306:5)",
"0x55c03d4a7893: winter_verifier::composer::DeepComposer<E>::compose_trace_columns (verifier/src/composer.rs:151:26)",
"0x55c03d3cce1c: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d3e6a89: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d3037c1: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d3fdc2c: winter_air::air::boundary::constraint_group::BoundaryConstraintGroup<F,E>::add (air/boundary/constraint_group.rs:85:9)",
"0x55c03d4c2b94: winter_air::air::boundary::group_constraints (air/boundary/mod.rs:176:9)",
"0x55c03d4b2ead: winter_prover::composer::DeepCompositionPoly<E>::add_trace_polys (src/composer/mod.rs:139:13)",
"0x55c03d33ac4c: winter_prover::constraints::evaluator::ConstraintEvaluator<A,E>::evaluate_fragment_main (src/constraints/evaluator.rs:148:31)",
"0x55c03d39e8a2: alloc::raw_vec::RawVec<T,A>::allocate_in (alloc/src/raw_vec.rs:184:45)",
"0x55c03d267e5d: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d267e5d: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d267e5d: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d267e5d: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:32:34)",
"0x55c03d32feae: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d329d57: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d4641de: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d542f90: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:218:46)",
"0x55c03d5386b3: winter_prover::matrix::col_matrix::ColMatrix<E>::interpolate_columns::{{closure}} (src/matrix/col_matrix.rs:200:34)",
"0x55c03d48328a: core::iter::adapters::map::map_fold::{{closure}} (iter/adapters/map.rs:84:28)",
"0x55c03d17b06f: <core::slice::iter::Iter<T> as core::iter::traits::iterator::Iterator>::fold (slice/iter/macros.rs:215:27)",
"0x55c03d27d847: alloc::raw_vec::RawVec<T,A>::with_capacity_in (alloc/src/raw_vec.rs:130:9)",
"0x55c03d27d847: alloc::vec::Vec<T,A>::with_capacity_in (src/vec/mod.rs:670:20)",
"0x55c03d27d847: alloc::vec::Vec<T>::with_capacity (src/vec/mod.rs:479:9)",
"0x55c03d27d847: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter_nested::SpecFromIterNested<T,I>>::from_iter (src/vec/spec_from_iter_nested.rs:54:33)",
"0x55c03d33037e: <alloc::vec::Vec<T> as alloc::vec::spec_from_iter::SpecFromIter<T,I>>::from_iter (src/vec/spec_from_iter.rs:33:9)",
"0x55c03d3226e7: <alloc::vec::Vec<T> as core::iter::traits::collect::FromIterator<T>>::from_iter (src/vec/mod.rs:2696:9)",
"0x55c03d46277e: core::iter::traits::iterator::Iterator::collect (iter/traits/iterator.rs:1895:9)",
"0x55c03d376624: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:290:27)",
"0x55c03d4bd809: winter_prover::Prover::build_trace_commitment::{{closure}} (prover/src/lib.rs:641:17)",
"0x55c03d5431bf: winter_prover::matrix::row_matrix::RowMatrix<E>::commit_to_comb_rows::{{closure}} (src/matrix/row_matrix.rs:226:50)",
"0x55c03d3c20dc: alloc::raw_vec::RawVec<T,A>::grow_amortized (alloc/src/raw_vec.rs:404:19)",
"0x55c03d3e7209: alloc::raw_vec::RawVec<T,A>::reserve_for_push (alloc/src/raw_vec.rs:302:24)",
"0x55c03d303efe: alloc::vec::Vec<T,A>::push (src/vec/mod.rs:1829:13)",
"0x55c03d3fa4f1: winter_crypto::merkle::MerkleTree<H>::prove_batch (src/merkle/mod.rs:269:21)",
"0x55c03d37610b: winter_fri::verifier::FriVerifier<E,C,H,R>::verify_generic (src/verifier/mod.rs:265:32)",
"0x55c03d5ba05e: winter_fri::prover::FriProver<B,E,C,H>::set_remainder (src/prover/mod.rs:222:30)",
"0x55c03d5b783b: winter_fri::prover::FriProver<B,E,C,H>::build_layers (src/prover/mod.rs:190:9)",
"0x55c03d573ea3: winter_prover::Prover::generate_proof (prover/src/lib.rs:561:9)",
"0x55c03d5dda0f: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::KV>::split (collections/btree/node.rs:1202:28)",
"0x55c03d5df473: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert (collections/btree/node.rs:931:30)",
"0x55c03d5de78a: alloc::collections::btree::node::Handle<alloc::collections::btree::node::NodeRef<alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf>,alloc::collections::btree::node::marker::Edge>::insert_recursing (collections/btree/node.rs:1027:41)",
"0x55c03d559b0b: winter_verifier::evaluator::evaluate_constraints (verifier/src/evaluator.rs:39:30)"
]
}